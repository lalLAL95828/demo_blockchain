{
	"id": "7691a6223bd8d6cf0481fc649be2ad6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"custom/ballot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n\r\n//一个投票的合约\r\ncontract Ballot{\r\n    struct Voter{\r\n        uint8 weight;//投票的权重\r\n        bool voted; //是否已经投票\r\n        address delegate;//投票委托人\r\n        uint8 vote;//提案对象索引\r\n    }\r\n    //提案对象\r\n    struct Proposal{\r\n        bytes32 name;\r\n        uint voteCount;//累计票数\r\n    }\r\n\r\n    //主席\r\n    address public chairperson;\r\n\r\n    mapping(address=>Voter)public voters;\r\n\r\n    //提案对象数组\r\n    Proposal[] public proposals;\r\n\r\n    constructor(bytes32[] memory proposalNames){\r\n        chairperson = msg.sender;\r\n\r\n        voters[chairperson].weight = 1;\r\n\r\n        //循环创建提案对象\r\n        for (uint i = 0; i < proposalNames.length; i++) {\r\n            proposals.push(Proposal({\r\n                name: proposalNames[i],\r\n                voteCount: 0\r\n            }));\r\n        }\r\n    }\r\n\r\n    //主席赋予投票权\r\n    //外部函数\r\n    function giveRightToVote(address voter) external{\r\n        require(msg.sender == chairperson,\"Only chairperson can give right to vote.\");\r\n        require(!voters[voter].voted,\"The voter already voted\");\r\n        require(voters[voter].weight == 0);\r\n        voters[voter].weight = 1;\r\n    }\r\n\r\n\r\n    //投票委托\r\n    function delegate(address to) external {\r\n        //使用storage类似与指针引用\r\n        //使用memory类似与复制一个副本，修改操作不会在voters上生效\r\n        Voter storage sender = voters[msg.sender];\r\n        require(sender.weight != 0,\"You have no right to vote.\");\r\n        require(!sender.voted,\"You already voted.\");\r\n        require(to != msg.sender,\"Self-delegation is disallowed.\");\r\n\r\n        //委托可能存在循环的情况，\r\n        while(voters[to].delegate != address(0)){\r\n            to = voters[to].delegate;\r\n            //阻止循环委托\r\n            require(to != msg.sender,\"Found loop in delegation\");\r\n        }\r\n\r\n        Voter storage delegater = voters[to];\r\n        require(delegater.weight >= 1);\r\n\r\n\r\n        sender.voted = true;\r\n        sender.delegate = to;\r\n\r\n        if(delegater.voted){\r\n            //如果委托者，已经投票，则修改提案的获票数量\r\n            proposals[delegater.vote].voteCount += sender.weight;\r\n        }else{\r\n            //没有投票的话，增加投票权重\r\n            delegater.weight += sender.weight;\r\n        }\r\n    }\r\n\r\n    //投票\r\n    function vote(uint8 proposal) external{\r\n        Voter storage sender = voters[msg.sender];\r\n        require(!sender.voted,\"You already voted\");\r\n        require(sender.weight != 0,\"You have no right to vote.\");\r\n        sender.voted = true;\r\n        sender.vote = proposal;\r\n        proposals[proposal].voteCount += sender.weight;\r\n    }\r\n\r\n    //获取数量最多的\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"custom/ballot.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "proposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "weight",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "vote",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"custom/ballot.sol\":88:2848  contract Ballot{\r... */\n  mstore(0x40, 0x80)\n    /* \"custom/ballot.sol\":572:937  constructor(bytes32[] memory proposalNames){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"custom/ballot.sol\":626:637  chairperson */\n  0x00\n    /* \"custom/ballot.sol\":626:650  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"custom/ballot.sol\":640:650  msg.sender */\n  caller\n    /* \"custom/ballot.sol\":626:650  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"custom/ballot.sol\":663:682  voters[chairperson] */\n  dup2\n  mstore\n    /* \"custom/ballot.sol\":626:650  chairperson = msg.sender */\n  0x01\n    /* \"custom/ballot.sol\":663:682  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"custom/ballot.sol\":663:693  voters[chairperson].weight = 1 */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"custom/ballot.sol\":742:930  for (uint i = 0; i < proposalNames.length; i++) {\r... */\ntag_6:\n    /* \"custom/ballot.sol\":763:776  proposalNames */\n  dup2\n    /* \"custom/ballot.sol\":763:783  proposalNames.length */\n  mload\n    /* \"custom/ballot.sol\":759:760  i */\n  dup2\n    /* \"custom/ballot.sol\":759:783  i < proposalNames.length */\n  lt\n    /* \"custom/ballot.sol\":742:930  for (uint i = 0; i < proposalNames.length; i++) {\r... */\n  iszero\n  tag_7\n  jumpi\n    /* \"custom/ballot.sol\":805:814  proposals */\n  0x02\n    /* \"custom/ballot.sol\":820:917  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"custom/ballot.sol\":854:867  proposalNames */\n  dup5\n    /* \"custom/ballot.sol\":868:869  i */\n  dup5\n    /* \"custom/ballot.sol\":854:870  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"custom/ballot.sol\":820:917  Proposal({\r... */\n  dup3\n  mstore\n    /* \"custom/ballot.sol\":900:901  0 */\n  0x00\n    /* \"custom/ballot.sol\":820:917  Proposal({\r... */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"custom/ballot.sol\":805:918  proposals.push(Proposal({\r... */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"custom/ballot.sol\":785:788  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"custom/ballot.sol\":742:930  for (uint i = 0; i < proposalNames.length; i++) {\r... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"custom/ballot.sol\":572:937  constructor(bytes32[] memory proposalNames){\r... */\n  pop\n    /* \"custom/ballot.sol\":88:2848  contract Ballot{\r... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:1131   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:203   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":199:200   */\n  0x00\n    /* \"#utility.yul\":196:197   */\n  dup1\n    /* \"#utility.yul\":189:201   */\n  revert\n    /* \"#utility.yul\":151:203   */\ntag_18:\n    /* \"#utility.yul\":232:241   */\n  dup3\n    /* \"#utility.yul\":226:242   */\n  mload\n    /* \"#utility.yul\":261:279   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":302:304   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  dup3\n    /* \"#utility.yul\":291:305   */\n  gt\n    /* \"#utility.yul\":288:322   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":315:316   */\n  dup1\n    /* \"#utility.yul\":308:320   */\n  revert\n    /* \"#utility.yul\":288:322   */\ntag_19:\n    /* \"#utility.yul\":356:362   */\n  dup2\n    /* \"#utility.yul\":345:354   */\n  dup6\n    /* \"#utility.yul\":341:363   */\n  add\n    /* \"#utility.yul\":331:363   */\n  swap2\n  pop\n    /* \"#utility.yul\":401:408   */\n  dup6\n    /* \"#utility.yul\":394:398   */\n  0x1f\n    /* \"#utility.yul\":390:392   */\n  dup4\n    /* \"#utility.yul\":386:399   */\n  add\n    /* \"#utility.yul\":382:409   */\n  slt\n    /* \"#utility.yul\":372:427   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":423:424   */\n  0x00\n    /* \"#utility.yul\":420:421   */\n  dup1\n    /* \"#utility.yul\":413:425   */\n  revert\n    /* \"#utility.yul\":372:427   */\ntag_20:\n    /* \"#utility.yul\":452:454   */\n  dup2\n    /* \"#utility.yul\":446:455   */\n  mload\n    /* \"#utility.yul\":474:476   */\n  dup2\n    /* \"#utility.yul\":470:472   */\n  dup2\n    /* \"#utility.yul\":467:477   */\n  gt\n    /* \"#utility.yul\":464:500   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":480:498   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":527:529   */\n  dup4\n    /* \"#utility.yul\":523:525   */\n  dup2\n    /* \"#utility.yul\":519:530   */\n  mul\n    /* \"#utility.yul\":559:561   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  mload\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":618:625   */\n  not\n    /* \"#utility.yul\":613:615   */\n  0x3f\n    /* \"#utility.yul\":609:611   */\n  dup4\n    /* \"#utility.yul\":605:616   */\n  add\n    /* \"#utility.yul\":601:626   */\n  and\n    /* \"#utility.yul\":593:599   */\n  dup2\n    /* \"#utility.yul\":589:627   */\n  add\n    /* \"#utility.yul\":677:683   */\n  dup2\n    /* \"#utility.yul\":665:675   */\n  dup2\n    /* \"#utility.yul\":662:684   */\n  lt\n    /* \"#utility.yul\":657:659   */\n  dup6\n    /* \"#utility.yul\":645:655   */\n  dup3\n    /* \"#utility.yul\":642:660   */\n  gt\n    /* \"#utility.yul\":639:685   */\n  or\n    /* \"#utility.yul\":636:708   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":688:706   */\n  tag_25\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":724:726   */\n  0x40\n    /* \"#utility.yul\":717:739   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":808:823   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":843:854   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":873:884   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":869:889   */\n  dup8\n  add\n    /* \"#utility.yul\":866:899   */\n  dup11\n  lt\n    /* \"#utility.yul\":863:916   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":912:913   */\n  0x00\n    /* \"#utility.yul\":909:910   */\n  dup1\n    /* \"#utility.yul\":902:914   */\n  revert\n    /* \"#utility.yul\":863:916   */\ntag_26:\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":925:935   */\n  swap6\n  pop\n    /* \"#utility.yul\":944:1100   */\ntag_27:\n    /* \"#utility.yul\":958:960   */\n  dup4\n    /* \"#utility.yul\":955:956   */\n  dup7\n    /* \"#utility.yul\":952:961   */\n  lt\n    /* \"#utility.yul\":944:1100   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n  mload\n    /* \"#utility.yul\":1003:1026   */\n  dup6\n  mstore\n    /* \"#utility.yul\":976:977   */\n  0x01\n    /* \"#utility.yul\":969:978   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1046:1058   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1078:1090   */\n  dup7\n  add\n    /* \"#utility.yul\":944:1100   */\n  jump(tag_27)\ntag_29:\n  pop\n    /* \"#utility.yul\":1119:1125   */\n  swap9\n    /* \"#utility.yul\":14:1131   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1136:1425   */\ntag_14:\n    /* \"#utility.yul\":1175:1178   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1196:1213   */\n  dup3\n  eq\n    /* \"#utility.yul\":1193:1390   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1246:1323   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1243:1244   */\n  0x00\n    /* \"#utility.yul\":1236:1324   */\n  mstore\n    /* \"#utility.yul\":1347:1351   */\n  0x11\n    /* \"#utility.yul\":1344:1345   */\n  0x04\n    /* \"#utility.yul\":1337:1352   */\n  mstore\n    /* \"#utility.yul\":1375:1379   */\n  0x24\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1365:1380   */\n  revert\n    /* \"#utility.yul\":1193:1390   */\ntag_31:\n  pop\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n  swap1\n    /* \"#utility.yul\":1136:1425   */\n  jump\t// out\n    /* \"#utility.yul\":1430:1614   */\ntag_11:\n    /* \"#utility.yul\":1482:1559   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1479:1480   */\n  0x00\n    /* \"#utility.yul\":1472:1560   */\n  mstore\n    /* \"#utility.yul\":1579:1583   */\n  0x32\n    /* \"#utility.yul\":1576:1577   */\n  0x04\n    /* \"#utility.yul\":1569:1584   */\n  mstore\n    /* \"#utility.yul\":1603:1607   */\n  0x24\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1593:1608   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_23:\n    /* \"#utility.yul\":1671:1748   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1668:1669   */\n  0x00\n    /* \"#utility.yul\":1661:1749   */\n  mstore\n    /* \"#utility.yul\":1768:1772   */\n  0x41\n    /* \"#utility.yul\":1765:1766   */\n  0x04\n    /* \"#utility.yul\":1758:1773   */\n  mstore\n    /* \"#utility.yul\":1792:1796   */\n  0x24\n    /* \"#utility.yul\":1789:1790   */\n  0x00\n    /* \"#utility.yul\":1782:1797   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_16:\n    /* \"custom/ballot.sol\":88:2848  contract Ballot{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"custom/ballot.sol\":88:2848  contract Ballot{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      div(calldataload(0x00), 0x0100000000000000000000000000000000000000000000000000000000)\n      0x013cf08b\n      dup2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"custom/ballot.sol\":536:563  Proposal[] public proposals */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1192:1217   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      dup4\n      add\n        /* \"#utility.yul\":1226:1260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1165:1183   */\n      add\n        /* \"custom/ballot.sol\":536:563  Proposal[] public proposals */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"custom/ballot.sol\":430:456  address public chairperson */\n    tag_4:\n      sload(0x00)\n      tag_15\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":951:1006   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":933:1007   */\n      dup2\n      mstore\n        /* \"#utility.yul\":921:923   */\n      0x20\n        /* \"#utility.yul\":906:924   */\n      add\n        /* \"custom/ballot.sol\":430:456  address public chairperson */\n      tag_13\n        /* \"#utility.yul\":787:1013   */\n      jump\n        /* \"custom/ballot.sol\":1314:2454  function delegate(address to) external {\r... */\n    tag_5:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"custom/ballot.sol\":994:1284  function giveRightToVote(address voter) external{\r... */\n    tag_6:\n      tag_19\n      tag_24\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n        /* \"custom/ballot.sol\":465:501  mapping(address=>Voter)public voters */\n    tag_7:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_27:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      dup2\n      div\n      dup3\n      and\n      swap2\n      sub(exp(0x02, 0xa0), 0x01)\n      0x010000\n      dup4\n      div\n      and\n      swap2\n      0x0100000000000000000000000000000000000000000000\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4039:4043   */\n      0xff\n        /* \"#utility.yul\":4027:4044   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":4009:4045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4088:4102   */\n      swap4\n      iszero\n        /* \"#utility.yul\":4081:4103   */\n      iszero\n        /* \"#utility.yul\":4076:4078   */\n      0x20\n        /* \"#utility.yul\":4061:4079   */\n      dup6\n      add\n        /* \"#utility.yul\":4054:4104   */\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":4140:4195   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4120:4138   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":4113:4196   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4232:4249   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4227:4229   */\n      0x60\n        /* \"#utility.yul\":4212:4230   */\n      dup3\n      add\n        /* \"#utility.yul\":4205:4250   */\n      mstore\n        /* \"#utility.yul\":3996:3999   */\n      0x80\n        /* \"#utility.yul\":3981:4000   */\n      add\n        /* \"custom/ballot.sol\":465:501  mapping(address=>Voter)public voters */\n      tag_13\n        /* \"#utility.yul\":3792:4256   */\n      jump\n        /* \"custom/ballot.sol\":2476:2814  function vote(uint8 proposal) external{\r... */\n    tag_8:\n      tag_19\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"custom/ballot.sol\":536:563  Proposal[] public proposals */\n    tag_12:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"custom/ballot.sol\":1314:2454  function delegate(address to) external {\r... */\n    tag_22:\n        /* \"custom/ballot.sol\":1530:1540  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1500:1520  Voter storage sender */\n      0x00\n        /* \"custom/ballot.sol\":1523:1541  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1523:1529  voters */\n      0x01\n        /* \"custom/ballot.sol\":1523:1541  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1560:1573  sender.weight */\n      dup1\n      sload\n      0xff\n      and\n        /* \"custom/ballot.sol\":1552:1608  require(sender.weight != 0,\"You have no right to vote.\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2927:2929   */\n      0x20\n        /* \"custom/ballot.sol\":1552:1608  require(sender.weight != 0,\"You have no right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2909:2930   */\n      mstore\n        /* \"#utility.yul\":2966:2968   */\n      0x1a\n        /* \"#utility.yul\":2946:2964   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2939:2969   */\n      mstore\n        /* \"#utility.yul\":3005:3033   */\n      0x596f752068617665206e6f20726967687420746f20766f74652e000000000000\n        /* \"#utility.yul\":2985:3003   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2978:3034   */\n      mstore\n        /* \"#utility.yul\":3051:3069   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1552:1608  require(sender.weight != 0,\"You have no right to vote.\") */\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"custom/ballot.sol\":1628:1640  sender.voted */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"custom/ballot.sol\":1627:1640  !sender.voted */\n      iszero\n        /* \"custom/ballot.sol\":1619:1662  require(!sender.voted,\"You already voted.\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2171:2173   */\n      0x20\n        /* \"custom/ballot.sol\":1619:1662  require(!sender.voted,\"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2153:2174   */\n      mstore\n        /* \"#utility.yul\":2210:2212   */\n      0x12\n        /* \"#utility.yul\":2190:2208   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2183:2213   */\n      mstore\n        /* \"#utility.yul\":2249:2269   */\n      0x596f7520616c726561647920766f7465642e0000000000000000000000000000\n        /* \"#utility.yul\":2229:2247   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2222:2270   */\n      mstore\n        /* \"#utility.yul\":2287:2305   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1619:1662  require(!sender.voted,\"You already voted.\") */\n      tag_39\n        /* \"#utility.yul\":1969:2311   */\n      jump\n        /* \"custom/ballot.sol\":1619:1662  require(!sender.voted,\"You already voted.\") */\n    tag_41:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1681:1697  to != msg.sender */\n      dup3\n      and\n        /* \"custom/ballot.sol\":1687:1697  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1681:1697  to != msg.sender */\n      eq\n      iszero\n        /* \"custom/ballot.sol\":1673:1731  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3635:3637   */\n      0x20\n        /* \"custom/ballot.sol\":1673:1731  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3617:3638   */\n      mstore\n        /* \"#utility.yul\":3674:3676   */\n      0x1e\n        /* \"#utility.yul\":3654:3672   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3647:3677   */\n      mstore\n        /* \"#utility.yul\":3713:3745   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":3693:3711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3686:3746   */\n      mstore\n        /* \"#utility.yul\":3763:3781   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1673:1731  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      tag_39\n        /* \"#utility.yul\":3433:3787   */\n      jump\n        /* \"custom/ballot.sol\":1673:1731  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n    tag_44:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1798:1808  voters[to] */\n      dup3\n      dup2\n      and\n        /* \"custom/ballot.sol\":1829:1830  0 */\n      0x00\n        /* \"custom/ballot.sol\":1798:1808  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1798:1804  voters */\n      0x01\n        /* \"custom/ballot.sol\":1798:1808  voters[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1798:1817  voters[to].delegate */\n      sload\n      0x010000\n      swap1\n      div\n      and\n        /* \"custom/ballot.sol\":1798:1831  voters[to].delegate != address(0) */\n      iszero\n        /* \"custom/ballot.sol\":1792:1984  while(voters[to].delegate != address(0)){\r... */\n      tag_48\n      jumpi\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1852:1862  voters[to] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1852:1858  voters */\n      0x01\n        /* \"custom/ballot.sol\":1852:1862  voters[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1852:1871  voters[to].delegate */\n      sload\n      0x010000\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"custom/ballot.sol\":1934:1944  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1928:1944  to != msg.sender */\n      dup3\n      eq\n      iszero\n        /* \"custom/ballot.sol\":1920:1972  require(to != msg.sender,\"Found loop in delegation\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3282:3284   */\n      0x20\n        /* \"custom/ballot.sol\":1920:1972  require(to != msg.sender,\"Found loop in delegation\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3264:3285   */\n      mstore\n        /* \"#utility.yul\":3321:3323   */\n      0x18\n        /* \"#utility.yul\":3301:3319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3294:3324   */\n      mstore\n        /* \"#utility.yul\":3360:3386   */\n      0x466f756e64206c6f6f7020696e2064656c65676174696f6e0000000000000000\n        /* \"#utility.yul\":3340:3358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3333:3387   */\n      mstore\n        /* \"#utility.yul\":3404:3422   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1920:1972  require(to != msg.sender,\"Found loop in delegation\") */\n      tag_39\n        /* \"#utility.yul\":3080:3428   */\n      jump\n        /* \"custom/ballot.sol\":1920:1972  require(to != msg.sender,\"Found loop in delegation\") */\n    tag_49:\n        /* \"custom/ballot.sol\":1792:1984  while(voters[to].delegate != address(0)){\r... */\n      jump(tag_44)\n    tag_48:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":2022:2032  voters[to] */\n      dup3\n      and\n        /* \"custom/ballot.sol\":1996:2019  Voter storage delegater */\n      0x00\n        /* \"custom/ballot.sol\":2022:2032  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":2022:2028  voters */\n      0x01\n        /* \"custom/ballot.sol\":2022:2032  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"custom/ballot.sol\":2051:2067  delegater.weight */\n      dup1\n      sload\n        /* \"custom/ballot.sol\":2022:2032  voters[to] */\n      swap1\n      swap2\n        /* \"custom/ballot.sol\":2051:2067  delegater.weight */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"custom/ballot.sol\":2051:2072  delegater.weight >= 1 */\n      lt\n      iszero\n        /* \"custom/ballot.sol\":2043:2073  require(delegater.weight >= 1) */\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n        /* \"custom/ballot.sol\":2088:2107  sender.voted = true */\n      dup2\n      sload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":2118:2138  sender.delegate = to */\n      dup5\n      and\n      0x010000\n      mul\n      not(0xffffffffffffffffffffffffffffffffffffffffff00)\n      swap1\n      swap2\n      and\n      or\n        /* \"custom/ballot.sol\":2088:2107  sender.voted = true */\n      0x0100\n        /* \"custom/ballot.sol\":2118:2138  sender.delegate = to */\n      swap1\n      dup2\n      or\n      dup4\n      sstore\n        /* \"custom/ballot.sol\":2154:2169  delegater.voted */\n      dup2\n      sload\n      div\n        /* \"custom/ballot.sol\":2088:2107  sender.voted = true */\n      0xff\n        /* \"custom/ballot.sol\":2154:2169  delegater.voted */\n      and\n        /* \"custom/ballot.sol\":2151:2447  if(delegater.voted){\r... */\n      iszero\n      tag_53\n      jumpi\n        /* \"custom/ballot.sol\":2303:2316  sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2274:2288  delegater.vote */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2264:2273  proposals */\n      0x02\n        /* \"custom/ballot.sol\":2264:2289  proposals[delegater.vote] */\n      dup1\n      sload\n        /* \"custom/ballot.sol\":2303:2316  sender.weight */\n      0xff\n      swap4\n      dup5\n      and\n      swap4\n        /* \"custom/ballot.sol\":2264:2273  proposals */\n      swap2\n      swap3\n        /* \"custom/ballot.sol\":2274:2288  delegater.vote */\n      0x0100000000000000000000000000000000000000000000\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"custom/ballot.sol\":2264:2289  proposals[delegater.vote] */\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"custom/ballot.sol\":2264:2299  proposals[delegater.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"custom/ballot.sol\":2264:2316  proposals[delegater.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"custom/ballot.sol\":2151:2447  if(delegater.voted){\r... */\n      tag_60\n      swap1\n      pop\n      jump\n    tag_53:\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      0xff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"custom/ballot.sol\":2402:2411  delegater */\n      dup4\n      swap2\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      0x00\n      swap2\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      tag_61\n      swap2\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      dup6\n      swap2\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      and\n      tag_62\n      jump\t// in\n    tag_61:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"custom/ballot.sol\":2151:2447  if(delegater.voted){\r... */\n    tag_60:\n        /* \"custom/ballot.sol\":1353:2454  {\r... */\n      pop\n      pop\n        /* \"custom/ballot.sol\":1314:2454  function delegate(address to) external {\r... */\n      pop\n      jump\t// out\n        /* \"custom/ballot.sol\":994:1284  function giveRightToVote(address voter) external{\r... */\n    tag_25:\n        /* \"custom/ballot.sol\":1075:1086  chairperson */\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x00))\n        /* \"custom/ballot.sol\":1061:1071  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1061:1086  msg.sender == chairperson */\n      eq\n        /* \"custom/ballot.sol\":1053:1130  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2518:2520   */\n      0x20\n        /* \"custom/ballot.sol\":1053:1130  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2500:2521   */\n      mstore\n        /* \"#utility.yul\":2557:2559   */\n      0x28\n        /* \"#utility.yul\":2537:2555   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2530:2560   */\n      mstore\n        /* \"#utility.yul\":2596:2630   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":2576:2594   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2569:2631   */\n      mstore\n        /* \"#utility.yul\":2667:2677   */\n      0x746f20766f74652e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2647:2665   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2640:2678   */\n      mstore\n        /* \"#utility.yul\":2695:2714   */\n      0x84\n      add\n        /* \"custom/ballot.sol\":1053:1130  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      tag_39\n        /* \"#utility.yul\":2316:2720   */\n      jump\n        /* \"custom/ballot.sol\":1053:1130  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n    tag_64:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1150:1163  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1150:1156  voters */\n      0x01\n        /* \"custom/ballot.sol\":1150:1163  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1150:1169  voters[voter].voted */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"custom/ballot.sol\":1149:1169  !voters[voter].voted */\n      iszero\n        /* \"custom/ballot.sol\":1141:1196  require(!voters[voter].voted,\"The voter already voted\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1473:1475   */\n      0x20\n        /* \"custom/ballot.sol\":1141:1196  require(!voters[voter].voted,\"The voter already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1455:1476   */\n      mstore\n        /* \"#utility.yul\":1512:1514   */\n      0x17\n        /* \"#utility.yul\":1492:1510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1485:1515   */\n      mstore\n        /* \"#utility.yul\":1551:1576   */\n      0x54686520766f74657220616c726561647920766f746564000000000000000000\n        /* \"#utility.yul\":1531:1549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1524:1577   */\n      mstore\n        /* \"#utility.yul\":1594:1612   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1141:1196  require(!voters[voter].voted,\"The voter already voted\") */\n      tag_39\n        /* \"#utility.yul\":1271:1618   */\n      jump\n        /* \"custom/ballot.sol\":1141:1196  require(!voters[voter].voted,\"The voter already voted\") */\n    tag_67:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1215:1228  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1215:1221  voters */\n      0x01\n        /* \"custom/ballot.sol\":1215:1228  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1215:1235  voters[voter].weight */\n      sload\n      0xff\n      and\n        /* \"custom/ballot.sol\":1215:1240  voters[voter].weight == 0 */\n      iszero\n        /* \"custom/ballot.sol\":1207:1241  require(voters[voter].weight == 0) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1252:1265  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1275:1276  1 */\n      0x01\n        /* \"custom/ballot.sol\":1252:1265  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"custom/ballot.sol\":1252:1276  voters[voter].weight = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"custom/ballot.sol\":994:1284  function giveRightToVote(address voter) external{\r... */\n      jump\t// out\n        /* \"custom/ballot.sol\":2476:2814  function vote(uint8 proposal) external{\r... */\n    tag_34:\n        /* \"custom/ballot.sol\":2555:2565  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":2525:2545  Voter storage sender */\n      0x00\n        /* \"custom/ballot.sol\":2548:2566  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":2548:2554  voters */\n      0x01\n        /* \"custom/ballot.sol\":2548:2566  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":2586:2598  sender.voted */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"custom/ballot.sol\":2585:2598  !sender.voted */\n      iszero\n        /* \"custom/ballot.sol\":2577:2619  require(!sender.voted,\"You already voted\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1825:1827   */\n      0x20\n        /* \"custom/ballot.sol\":2577:2619  require(!sender.voted,\"You already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1807:1828   */\n      mstore\n        /* \"#utility.yul\":1864:1866   */\n      0x11\n        /* \"#utility.yul\":1844:1862   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1837:1867   */\n      mstore\n        /* \"#utility.yul\":1903:1922   */\n      0x596f7520616c726561647920766f746564000000000000000000000000000000\n        /* \"#utility.yul\":1883:1901   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1876:1923   */\n      mstore\n        /* \"#utility.yul\":1940:1958   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":2577:2619  require(!sender.voted,\"You already voted\") */\n      tag_39\n        /* \"#utility.yul\":1623:1964   */\n      jump\n        /* \"custom/ballot.sol\":2577:2619  require(!sender.voted,\"You already voted\") */\n    tag_72:\n        /* \"custom/ballot.sol\":2638:2651  sender.weight */\n      dup1\n      sload\n      0xff\n      and\n        /* \"custom/ballot.sol\":2630:2686  require(sender.weight != 0,\"You have no right to vote.\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2927:2929   */\n      0x20\n        /* \"custom/ballot.sol\":2630:2686  require(sender.weight != 0,\"You have no right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2909:2930   */\n      mstore\n        /* \"#utility.yul\":2966:2968   */\n      0x1a\n        /* \"#utility.yul\":2946:2964   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2939:2969   */\n      mstore\n        /* \"#utility.yul\":3005:3033   */\n      0x596f752068617665206e6f20726967687420746f20766f74652e000000000000\n        /* \"#utility.yul\":2985:3003   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2978:3034   */\n      mstore\n        /* \"#utility.yul\":3051:3069   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":2630:2686  require(sender.weight != 0,\"You have no right to vote.\") */\n      tag_39\n        /* \"#utility.yul\":2725:3075   */\n      jump\n        /* \"custom/ballot.sol\":2630:2686  require(sender.weight != 0,\"You have no right to vote.\") */\n    tag_75:\n        /* \"custom/ballot.sol\":2697:2716  sender.voted = true */\n      dup1\n      sload\n      0xff\n        /* \"custom/ballot.sol\":2727:2749  sender.vote = proposal */\n      dup4\n      dup2\n      and\n      0x0100000000000000000000000000000000000000000000\n      dup2\n      mul\n      not(0xff0000000000000000000000000000000000000000ff00)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n        /* \"custom/ballot.sol\":2697:2716  sender.voted = true */\n      0x0100\n        /* \"custom/ballot.sol\":2727:2749  sender.vote = proposal */\n      or\n      dup1\n      dup5\n      sstore\n        /* \"custom/ballot.sol\":2760:2769  proposals */\n      0x02\n        /* \"custom/ballot.sol\":2760:2779  proposals[proposal] */\n      dup1\n      sload\n        /* \"custom/ballot.sol\":2793:2806  sender.weight */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n        /* \"custom/ballot.sol\":2727:2749  sender.vote = proposal */\n      swap1\n        /* \"custom/ballot.sol\":2760:2779  proposals[proposal] */\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_78\n      tag_56\n      jump\t// in\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"custom/ballot.sol\":2760:2789  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"custom/ballot.sol\":2760:2806  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_80:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"custom/ballot.sol\":2476:2814  function vote(uint8 proposal) external{\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:323   */\n    tag_21:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_83:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":220:274   */\n      and\n        /* \"#utility.yul\":213:218   */\n      dup2\n        /* \"#utility.yul\":210:275   */\n      eq\n        /* \"#utility.yul\":200:293   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":200:293   */\n    tag_84:\n        /* \"#utility.yul\":312:317   */\n      swap4\n        /* \"#utility.yul\":14:323   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":328:508   */\n    tag_11:\n        /* \"#utility.yul\":387:393   */\n      0x00\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":428:437   */\n      dup3\n        /* \"#utility.yul\":419:426   */\n      dup5\n        /* \"#utility.yul\":415:438   */\n      sub\n        /* \"#utility.yul\":411:443   */\n      slt\n        /* \"#utility.yul\":408:460   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":456:457   */\n      0x00\n        /* \"#utility.yul\":453:454   */\n      dup1\n        /* \"#utility.yul\":446:458   */\n      revert\n        /* \"#utility.yul\":408:460   */\n    tag_86:\n      pop\n        /* \"#utility.yul\":479:502   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":328:508   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":513:782   */\n    tag_33:\n        /* \"#utility.yul\":570:576   */\n      0x00\n        /* \"#utility.yul\":623:625   */\n      0x20\n        /* \"#utility.yul\":611:620   */\n      dup3\n        /* \"#utility.yul\":602:609   */\n      dup5\n        /* \"#utility.yul\":598:621   */\n      sub\n        /* \"#utility.yul\":594:626   */\n      slt\n        /* \"#utility.yul\":591:643   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":636:637   */\n      dup1\n        /* \"#utility.yul\":629:641   */\n      revert\n        /* \"#utility.yul\":591:643   */\n    tag_88:\n        /* \"#utility.yul\":678:687   */\n      dup2\n        /* \"#utility.yul\":665:688   */\n      calldataload\n        /* \"#utility.yul\":728:732   */\n      0xff\n        /* \"#utility.yul\":721:726   */\n      dup2\n        /* \"#utility.yul\":717:733   */\n      and\n        /* \"#utility.yul\":710:715   */\n      dup2\n        /* \"#utility.yul\":707:734   */\n      eq\n        /* \"#utility.yul\":697:752   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":748:749   */\n      0x00\n        /* \"#utility.yul\":745:746   */\n      dup1\n        /* \"#utility.yul\":738:750   */\n      revert\n        /* \"#utility.yul\":4261:4389   */\n    tag_59:\n        /* \"#utility.yul\":4301:4304   */\n      0x00\n        /* \"#utility.yul\":4332:4333   */\n      dup3\n        /* \"#utility.yul\":4328:4334   */\n      not\n        /* \"#utility.yul\":4325:4326   */\n      dup3\n        /* \"#utility.yul\":4322:4335   */\n      gt\n        /* \"#utility.yul\":4319:4358   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":4338:4356   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      pop\n        /* \"#utility.yul\":4374:4383   */\n      add\n      swap1\n        /* \"#utility.yul\":4261:4389   */\n      jump\t// out\n        /* \"#utility.yul\":4394:4598   */\n    tag_62:\n        /* \"#utility.yul\":4432:4435   */\n      0x00\n        /* \"#utility.yul\":4468:4472   */\n      0xff\n        /* \"#utility.yul\":4465:4466   */\n      dup3\n        /* \"#utility.yul\":4461:4473   */\n      and\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4497:4498   */\n      dup5\n        /* \"#utility.yul\":4493:4505   */\n      and\n        /* \"#utility.yul\":4535:4538   */\n      dup1\n        /* \"#utility.yul\":4529:4533   */\n      0xff\n        /* \"#utility.yul\":4525:4539   */\n      sub\n        /* \"#utility.yul\":4520:4523   */\n      dup3\n        /* \"#utility.yul\":4517:4540   */\n      gt\n        /* \"#utility.yul\":4514:4563   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4543:4561   */\n      tag_106\n      tag_103\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4579:4592   */\n      add\n      swap4\n        /* \"#utility.yul\":4394:4598   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4603:4787   */\n    tag_103:\n        /* \"#utility.yul\":4655:4732   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4645:4733   */\n      mstore\n        /* \"#utility.yul\":4752:4756   */\n      0x11\n        /* \"#utility.yul\":4749:4750   */\n      0x04\n        /* \"#utility.yul\":4742:4757   */\n      mstore\n        /* \"#utility.yul\":4776:4780   */\n      0x24\n        /* \"#utility.yul\":4773:4774   */\n      0x00\n        /* \"#utility.yul\":4766:4781   */\n      revert\n        /* \"#utility.yul\":4792:4976   */\n    tag_56:\n        /* \"#utility.yul\":4844:4921   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4841:4842   */\n      0x00\n        /* \"#utility.yul\":4834:4922   */\n      mstore\n        /* \"#utility.yul\":4941:4945   */\n      0x32\n        /* \"#utility.yul\":4938:4939   */\n      0x04\n        /* \"#utility.yul\":4931:4946   */\n      mstore\n        /* \"#utility.yul\":4965:4969   */\n      0x24\n        /* \"#utility.yul\":4962:4963   */\n      0x00\n        /* \"#utility.yul\":4955:4970   */\n      revert\n\n    auxdata: 0xa26469706673582212207f967abf5e321c96fe5bd25eeaff13c7224d05a083b6afde27a6ca94722fe45964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1805:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1011:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "251:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "261:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "255:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "294:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "302:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "291:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"nodeType": "YulIf",
															"src": "288:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "335:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "390:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "386:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:35:1"
															},
															"nodeType": "YulIf",
															"src": "372:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "452:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "440:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "470:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "467:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:10:1"
															},
															"nodeType": "YulIf",
															"src": "464:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "523:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "559:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "553:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "543:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "571:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "609:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "613:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "605:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "605:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "622:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "575:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "686:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "688:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "688:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "645:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "657:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "642:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "665:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "677:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "662:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "639:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:46:1"
															},
															"nodeType": "YulIf",
															"src": "636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "728:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "748:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "759:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "752:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "820:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "832:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "847:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "851:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "836:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "877:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "873:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "873:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "886:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "891:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:33:1"
															},
															"nodeType": "YulIf",
															"src": "863:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "925:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "934:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "929:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1010:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1021:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1015:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1003:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1003:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1039:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1055:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1046:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1039:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1071:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1078:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "955:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "958:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "962:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "964:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "973:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "969:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "969:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "964:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "948:3:1",
																"statements": []
															},
															"src": "944:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1109:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1119:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1246:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1236:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1236:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1199:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1210:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1196:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:17:1"
															},
															"nodeType": "YulIf",
															"src": "1193:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1410:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1136:289:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1651:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610aaf380380610aaf83398101604081905261002f916100d6565b60008054600160a060020a03191633908117825581526001602081905260408220805460ff191690911790555b81518110156100cf5760026040518060400160405280848481518110610084576100846101dc565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100c78161019a565b91505061005c565b505061023a565b600060208083850312156100e957600080fd5b825167ffffffffffffffff8082111561010157600080fd5b818501915085601f83011261011557600080fd5b8151818111156101275761012761020b565b838102604051601f19603f8301168101818110858211171561014b5761014b61020b565b604052828152858101935084860182860187018a101561016a57600080fd5b600095505b8386101561018d57805185526001959095019493860193860161016f565b5098975050505050505050565b60006000198214156101d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610866806102496000396000f3fe608060405234801561001057600080fd5b506004361061007e577c01000000000000000000000000000000000000000000000000000000006000350463013cf08b81146100835780632e4176cf146100b05780635c19a95c146100db5780639e7b8d61146100f0578063a3ec138d14610103578063b3f98adc14610192575b600080fd5b610096610091366004610759565b6101a5565b604080519283526020830191909152015b60405180910390f35b6000546100c390600160a060020a031681565b604051600160a060020a0390911681526020016100a7565b6100ee6100e9366004610729565b6101d3565b005b6100ee6100fe366004610729565b6104a2565b61015c610111366004610729565b60016020526000908152604090205460ff808216916101008104821691600160a060020a03620100008304169176010000000000000000000000000000000000000000000090041684565b6040805160ff95861681529315156020850152600160a060020a03909216918301919091529190911660608201526080016100a7565b6100ee6101a0366004610772565b6105e3565b600281815481106101b557600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020805460ff1661023b5760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e00000000000060448201526064015b60405180910390fd5b8054610100900460ff16156102955760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610232565b600160a060020a0382163314156102f15760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610232565b600160a060020a03828116600090815260016020526040902054620100009004161561039357600160a060020a03918216600090815260016020526040902054620100009004909116903382141561038e5760405160e560020a62461bcd02815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e00000000000000006044820152606401610232565b6102f1565b600160a060020a03821660009081526001602081905260409091208054909160ff90911610156103c257600080fd5b8154600160a060020a038416620100000275ffffffffffffffffffffffffffffffffffffffffff001990911617610100908117835581540460ff161561046957815481546002805460ff938416939192760100000000000000000000000000000000000000000000900490911690811061043e5761043e610801565b9060005260206000209060020201600101600082825461045e9190610795565b9091555061049d9050565b8154815460ff918216918391600091610484918591166107ad565b92506101000a81548160ff021916908360ff1602179055505b505050565b600054600160a060020a031633146105255760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610232565b600160a060020a038116600090815260016020526040902054610100900460ff16156105965760405160e560020a62461bcd02815260206004820152601760248201527f54686520766f74657220616c726561647920766f7465640000000000000000006044820152606401610232565b600160a060020a03811660009081526001602052604090205460ff16156105bc57600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090208054610100900460ff161561064c5760405160e560020a62461bcd02815260206004820152601160248201527f596f7520616c726561647920766f7465640000000000000000000000000000006044820152606401610232565b805460ff166106a05760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e0000000000006044820152606401610232565b805460ff838116760100000000000000000000000000000000000000000000810276ff0000000000000000000000000000000000000000ff0019909316929092176101001780845560028054919092169290811061070057610700610801565b906000526020600020906002020160010160008282546107209190610795565b90915550505050565b60006020828403121561073b57600080fd5b8135600160a060020a038116811461075257600080fd5b9392505050565b60006020828403121561076b57600080fd5b5035919050565b60006020828403121561078457600080fd5b813560ff8116811461075257600080fd5b600082198211156107a8576107a86107d2565b500190565b600060ff821660ff84168060ff038211156107ca576107ca6107d2565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207f967abf5e321c96fe5bd25eeaff13c7224d05a083b6afde27a6ca94722fe45964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAAF CODESIZE SUB DUP1 PUSH2 0xAAF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x84 JUMPI PUSH2 0x84 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xC7 DUP2 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C JUMP JUMPDEST POP POP PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH2 0x127 PUSH2 0x20B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x14B JUMPI PUSH2 0x14B PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x18D JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x16F JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x866 DUP1 PUSH2 0x249 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x13CF08B DUP2 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV AND ISZERO PUSH2 0x393 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 SWAP1 DUP2 OR DUP4 SSTORE DUP2 SLOAD DIV PUSH1 0xFF AND ISZERO PUSH2 0x469 JUMPI DUP2 SLOAD DUP2 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND SWAP4 SWAP2 SWAP3 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 LT PUSH2 0x43E JUMPI PUSH2 0x43E PUSH2 0x801 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x49D SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x484 SWAP2 DUP6 SWAP2 AND PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x525 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP4 DUP2 AND PUSH23 0x100000000000000000000000000000000000000000000 DUP2 MUL PUSH23 0xFF0000000000000000000000000000000000000000FF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 OR DUP1 DUP5 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 LT PUSH2 0x700 JUMPI PUSH2 0x700 PUSH2 0x801 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x7D2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x7D2 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x967ABF5E321C96FE5BD25EEAFF13C7224D05A083B6AFDE27A6CA94722FE45964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "88:2760:0:-:0;;;572:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;626:11;:24;;-1:-1:-1;;;;;;626:24:0;640:10;626:24;;;;;663:19;;626:24;663:19;;;;;;;:30;;-1:-1:-1;;663:30:0;;;;;;742:188;763:13;:20;759:1;:24;742:188;;;805:9;820:97;;;;;;;;854:13;868:1;854:16;;;;;;;;:::i;:::-;;;;;;;;;;;;820:97;;900:1;820:97;;;;;;805:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:3;;;;:::i;:::-;;;;742:188;;;;572:365;88:2760;;14:1117:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:52;;;199:1;196;189:12;151:52;232:9;226:16;261:18;302:2;294:6;291:14;288:34;;;318:1;315;308:12;288:34;356:6;345:9;341:22;331:32;;401:7;394:4;390:2;386:13;382:27;372:55;;423:1;420;413:12;372:55;452:2;446:9;474:2;470;467:10;464:36;;;480:18;;:::i;:::-;527:2;523;519:11;559:2;553:9;622:2;618:7;613:2;609;605:11;601:25;593:6;589:38;677:6;665:10;662:22;657:2;645:10;642:18;639:46;636:72;;;688:18;;:::i;:::-;724:2;717:22;774:18;;;808:15;;;;-1:-1:-1;843:11:1;;;873;;;869:20;;866:33;-1:-1:-1;863:53:1;;;912:1;909;902:12;863:53;934:1;925:10;;944:156;958:2;955:1;952:9;944:156;;;1015:10;;1003:23;;976:1;969:9;;;;;1046:12;;;;1078;;944:156;;;-1:-1:-1;1119:6:1;14:1117;-1:-1:-1;;;;;;;;14:1117:1:o;1136:289::-;1175:3;-1:-1:-1;;1196:17:1;;1193:197;;;1246:77;1243:1;1236:88;1347:4;1344:1;1337:15;1375:4;1372:1;1365:15;1193:197;-1:-1:-1;1417:1:1;1406:13;;1136:289::o;1430:184::-;1482:77;1479:1;1472:88;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:184;1671:77;1668:1;1661:88;1768:4;1765:1;1758:15;1792:4;1789:1;1782:15;1619:184;88:2760:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairperson_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegate_218": {
									"entryPoint": 467,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@giveRightToVote_108": {
									"entryPoint": 1186,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proposals_26": {
									"entryPoint": 421,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_267": {
									"entryPoint": 1507,
									"id": 267,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voters_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4978:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:239:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "231:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:73:1"
															},
															"nodeType": "YulIf",
															"src": "200:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "312:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "398:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "446:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "415:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:32:1"
															},
															"nodeType": "YulIf",
															"src": "408:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "469:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "492:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "479:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "469:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "375:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "387:6:1",
														"type": ""
													}
												],
												"src": "328:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "581:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "627:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "636:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "639:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "629:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "629:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "629:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:32:1"
															},
															"nodeType": "YulIf",
															"src": "591:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "678:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "665:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "656:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "710:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "721:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "728:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "717:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "717:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "707:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:35:1"
															},
															"nodeType": "YulIf",
															"src": "697:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "761:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "771:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "547:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "558:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "570:6:1",
														"type": ""
													}
												],
												"src": "513:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "888:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "898:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "910:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "898:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "940:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "963:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "933:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "857:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "879:4:1",
														"type": ""
													}
												],
												"src": "787:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1147:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1108:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1119:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1127:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1138:4:1",
														"type": ""
													}
												],
												"src": "1018:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1445:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1462:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1455:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1507:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1485:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1485:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1546:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1551:25:1",
																		"type": "",
																		"value": "The voter already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1524:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1586:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1609:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1586:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1436:4:1",
														"type": ""
													}
												],
												"src": "1271:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1797:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1807:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1807:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1859:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1837:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1903:19:1",
																		"type": "",
																		"value": "You already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1876:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1932:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1944:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1955:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1932:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1774:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1788:4:1",
														"type": ""
													}
												],
												"src": "1623:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2153:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2210:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2233:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2244:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2249:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2222:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2291:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2302:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2287:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2279:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2120:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2134:4:1",
														"type": ""
													}
												],
												"src": "1969:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2490:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2500:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2552:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2537:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2530:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2591:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2596:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2569:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2662:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2647:18:1"
																	},
																	{
																		"hexValue": "746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2667:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2640:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2687:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2467:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2481:4:1",
														"type": ""
													}
												],
												"src": "2316:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2899:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2916:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2927:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2909:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2909:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2950:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2961:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2946:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2939:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3000:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20726967687420746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3005:28:1",
																		"type": "",
																		"value": "You have no right to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2978:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3055:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3043:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2876:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2890:4:1",
														"type": ""
													}
												],
												"src": "2725:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3254:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3264:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3264:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3316:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3355:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3340:18:1"
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3360:26:1",
																		"type": "",
																		"value": "Found loop in delegation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3333:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3333:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3231:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3245:4:1",
														"type": ""
													}
												],
												"src": "3080:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3624:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3647:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:1"
																	},
																	{
																		"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3713:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3755:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3778:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3755:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3584:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3598:4:1",
														"type": ""
													}
												],
												"src": "3433:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:293:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3973:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3996:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3973:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4016:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4031:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4039:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4009:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4065:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4061:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "4095:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4088:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4088:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4054:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4144:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4152:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:83:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4113:83:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4216:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4227:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4212:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4212:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "4236:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4232:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4205:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4205:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3908:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3919:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3927:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3935:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3943:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3954:4:1",
														"type": ""
													}
												],
												"src": "3792:464:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4309:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4336:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4338:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4338:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4338:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4325:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4332:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4328:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:13:1"
															},
															"nodeType": "YulIf",
															"src": "4319:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4367:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4378:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4381:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4367:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4292:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4295:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4301:3:1",
														"type": ""
													}
												],
												"src": "4261:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4440:158:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4450:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4465:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "4454:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4482:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4497:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "4486:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4541:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4543:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4543:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4543:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "4520:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4529:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "4535:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:23:1"
															},
															"nodeType": "YulIf",
															"src": "4514:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "4583:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "4588:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4572:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4423:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4426:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4432:3:1",
														"type": ""
													}
												],
												"src": "4394:204:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4635:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4655:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4645:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4752:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4742:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4776:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4766:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4603:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4824:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4841:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4834:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4834:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4938:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4955:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4792:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"The voter already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"You already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You have no right to vote.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Found loop in delegation\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007e577c01000000000000000000000000000000000000000000000000000000006000350463013cf08b81146100835780632e4176cf146100b05780635c19a95c146100db5780639e7b8d61146100f0578063a3ec138d14610103578063b3f98adc14610192575b600080fd5b610096610091366004610759565b6101a5565b604080519283526020830191909152015b60405180910390f35b6000546100c390600160a060020a031681565b604051600160a060020a0390911681526020016100a7565b6100ee6100e9366004610729565b6101d3565b005b6100ee6100fe366004610729565b6104a2565b61015c610111366004610729565b60016020526000908152604090205460ff808216916101008104821691600160a060020a03620100008304169176010000000000000000000000000000000000000000000090041684565b6040805160ff95861681529315156020850152600160a060020a03909216918301919091529190911660608201526080016100a7565b6100ee6101a0366004610772565b6105e3565b600281815481106101b557600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020805460ff1661023b5760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e00000000000060448201526064015b60405180910390fd5b8054610100900460ff16156102955760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610232565b600160a060020a0382163314156102f15760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610232565b600160a060020a03828116600090815260016020526040902054620100009004161561039357600160a060020a03918216600090815260016020526040902054620100009004909116903382141561038e5760405160e560020a62461bcd02815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e00000000000000006044820152606401610232565b6102f1565b600160a060020a03821660009081526001602081905260409091208054909160ff90911610156103c257600080fd5b8154600160a060020a038416620100000275ffffffffffffffffffffffffffffffffffffffffff001990911617610100908117835581540460ff161561046957815481546002805460ff938416939192760100000000000000000000000000000000000000000000900490911690811061043e5761043e610801565b9060005260206000209060020201600101600082825461045e9190610795565b9091555061049d9050565b8154815460ff918216918391600091610484918591166107ad565b92506101000a81548160ff021916908360ff1602179055505b505050565b600054600160a060020a031633146105255760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610232565b600160a060020a038116600090815260016020526040902054610100900460ff16156105965760405160e560020a62461bcd02815260206004820152601760248201527f54686520766f74657220616c726561647920766f7465640000000000000000006044820152606401610232565b600160a060020a03811660009081526001602052604090205460ff16156105bc57600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090208054610100900460ff161561064c5760405160e560020a62461bcd02815260206004820152601160248201527f596f7520616c726561647920766f7465640000000000000000000000000000006044820152606401610232565b805460ff166106a05760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e0000000000006044820152606401610232565b805460ff838116760100000000000000000000000000000000000000000000810276ff0000000000000000000000000000000000000000ff0019909316929092176101001780845560028054919092169290811061070057610700610801565b906000526020600020906002020160010160008282546107209190610795565b90915550505050565b60006020828403121561073b57600080fd5b8135600160a060020a038116811461075257600080fd5b9392505050565b60006020828403121561076b57600080fd5b5035919050565b60006020828403121561078457600080fd5b813560ff8116811461075257600080fd5b600082198211156107a8576107a86107d2565b500190565b600060ff821660ff84168060ff038211156107ca576107ca6107d2565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207f967abf5e321c96fe5bd25eeaff13c7224d05a083b6afde27a6ca94722fe45964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x13CF08B DUP2 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC3 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV AND ISZERO PUSH2 0x393 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 SWAP1 DUP2 OR DUP4 SSTORE DUP2 SLOAD DIV PUSH1 0xFF AND ISZERO PUSH2 0x469 JUMPI DUP2 SLOAD DUP2 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND SWAP4 SWAP2 SWAP3 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 LT PUSH2 0x43E JUMPI PUSH2 0x43E PUSH2 0x801 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x49D SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x484 SWAP2 DUP6 SWAP2 AND PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x525 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F746564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x232 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP4 DUP2 AND PUSH23 0x100000000000000000000000000000000000000000000 DUP2 MUL PUSH23 0xFF0000000000000000000000000000000000000000FF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 OR DUP1 DUP5 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 LT PUSH2 0x700 JUMPI PUSH2 0x700 PUSH2 0x801 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x7D2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x7D2 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x967ABF5E321C96FE5BD25EEAFF13C7224D05A083B6AFDE27A6CA94722FE45964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "88:2760:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:27;;;;;;:::i;:::-;;:::i;:::-;;;;1192:25:1;;;1248:2;1233:18;;1226:34;;;;1165:18;536:27:0;;;;;;;;430:26;;;;;-1:-1:-1;;;;;430:26:0;;;;;;-1:-1:-1;;;;;951:55:1;;;933:74;;921:2;906:18;430:26:0;787:226:1;1314:1140:0;;;;;;:::i;:::-;;:::i;:::-;;994:290;;;;;;:::i;:::-;;:::i;465:36::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;465:36:0;;;;;;;;;;;;;;;4039:4:1;4027:17;;;4009:36;;4088:14;;4081:22;4076:2;4061:18;;4054:50;-1:-1:-1;;;;;4140:55:1;;;4120:18;;;4113:83;;;;4232:17;;;;4227:2;4212:18;;4205:45;3996:3;3981:19;465:36:0;3792:464:1;2476:338:0;;;;;;:::i;:::-;;:::i;536:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;536:27:0;:::o;1314:1140::-;1530:10;1500:20;1523:18;;;:6;:18;;;;;1560:13;;;;1552:56;;;;-1:-1:-1;;;;;1552:56:0;;2927:2:1;1552:56:0;;;2909:21:1;2966:2;2946:18;;;2939:30;3005:28;2985:18;;;2978:56;3051:18;;1552:56:0;;;;;;;;;1628:12;;;;;;;1627:13;1619:43;;;;-1:-1:-1;;;;;1619:43:0;;2171:2:1;1619:43:0;;;2153:21:1;2210:2;2190:18;;;2183:30;2249:20;2229:18;;;2222:48;2287:18;;1619:43:0;1969:342:1;1619:43:0;-1:-1:-1;;;;;1681:16:0;;1687:10;1681:16;;1673:58;;;;-1:-1:-1;;;;;1673:58:0;;3635:2:1;1673:58:0;;;3617:21:1;3674:2;3654:18;;;3647:30;3713:32;3693:18;;;3686:60;3763:18;;1673:58:0;3433:354:1;1673:58:0;-1:-1:-1;;;;;1798:10:0;;;1829:1;1798:10;;;:6;:10;;;;;:19;;;;;:33;1792:192;;-1:-1:-1;;;;;1852:10:0;;;;;;;:6;:10;;;;;:19;;;;;;;;1934:10;1928:16;;;1920:52;;;;-1:-1:-1;;;;;1920:52:0;;3282:2:1;1920:52:0;;;3264:21:1;3321:2;3301:18;;;3294:30;3360:26;3340:18;;;3333:54;3404:18;;1920:52:0;3080:348:1;1920:52:0;1792:192;;;-1:-1:-1;;;;;2022:10:0;;1996:23;2022:10;;;:6;:10;;;;;;;;2051:16;;2022:10;;2051:16;;;;:21;;2043:30;;;;;;2088:19;;-1:-1:-1;;;;;2118:20:0;;;;-1:-1:-1;;2118:20:0;;;;2088:19;2118:20;;;;;2154:15;;;2088:19;2154:15;2151:296;;;2303:13;;2274:14;;2264:9;:25;;2303:13;;;;;2264:9;;2274:14;;;;;;;2264:25;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;2151:296:0;;-1:-1:-1;2151:296:0;;2422:13;;2402:33;;2422:13;;;;;2402:9;;2422:13;;2402:33;;2422:13;;2402:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2151:296;1353:1101;;1314:1140;:::o;994:290::-;1075:11;;-1:-1:-1;;;;;1075:11:0;1061:10;:25;1053:77;;;;-1:-1:-1;;;;;1053:77:0;;2518:2:1;1053:77:0;;;2500:21:1;2557:2;2537:18;;;2530:30;2596:34;2576:18;;;2569:62;2667:10;2647:18;;;2640:38;2695:19;;1053:77:0;2316:404:1;1053:77:0;-1:-1:-1;;;;;1150:13:0;;;;;;:6;:13;;;;;:19;;;;;;1149:20;1141:55;;;;-1:-1:-1;;;;;1141:55:0;;1473:2:1;1141:55:0;;;1455:21:1;1512:2;1492:18;;;1485:30;1551:25;1531:18;;;1524:53;1594:18;;1141:55:0;1271:347:1;1141:55:0;-1:-1:-1;;;;;1215:13:0;;;;;;:6;:13;;;;;:20;;;:25;1207:34;;;;;;-1:-1:-1;;;;;1252:13:0;;;;;1275:1;1252:13;;;;;;;;:24;;-1:-1:-1;;1252:24:0;;;;;;994:290::o;2476:338::-;2555:10;2525:20;2548:18;;;:6;:18;;;;;2586:12;;;;;;;2585:13;2577:42;;;;-1:-1:-1;;;;;2577:42:0;;1825:2:1;2577:42:0;;;1807:21:1;1864:2;1844:18;;;1837:30;1903:19;1883:18;;;1876:47;1940:18;;2577:42:0;1623:341:1;2577:42:0;2638:13;;;;2630:56;;;;-1:-1:-1;;;;;2630:56:0;;2927:2:1;2630:56:0;;;2909:21:1;2966:2;2946:18;;;2939:30;3005:28;2985:18;;;2978:56;3051:18;;2630:56:0;2725:350:1;2630:56:0;2697:19;;;2727:22;;;;;;-1:-1:-1;;2727:22:0;;;;;;;2697:19;2727:22;;;;2760:9;:19;;2793:13;;;;;2727:22;2760:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;2476:338:0:o;14:309:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:1;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:1:o;328:180::-;387:6;440:2;428:9;419:7;415:23;411:32;408:52;;;456:1;453;446:12;408:52;-1:-1:-1;479:23:1;;328:180;-1:-1:-1;328:180:1:o;513:269::-;570:6;623:2;611:9;602:7;598:23;594:32;591:52;;;639:1;636;629:12;591:52;678:9;665:23;728:4;721:5;717:16;710:5;707:27;697:55;;748:1;745;738:12;4261:128;4301:3;4332:1;4328:6;4325:1;4322:13;4319:39;;;4338:18;;:::i;:::-;-1:-1:-1;4374:9:1;;4261:128::o;4394:204::-;4432:3;4468:4;4465:1;4461:12;4500:4;4497:1;4493:12;4535:3;4529:4;4525:14;4520:3;4517:23;4514:49;;;4543:18;;:::i;:::-;4579:13;;4394:204;-1:-1:-1;;;4394:204:1:o;4603:184::-;4655:77;4652:1;4645:88;4752:4;4749:1;4742:15;4776:4;4773:1;4766:15;4792:184;4844:77;4841:1;4834:88;4941:4;4938:1;4931:15;4965:4;4962:1;4955:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "430000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "553",
								"delegate(address)": "infinite",
								"giveRightToVote(address)": "21795",
								"proposals(uint256)": "1000",
								"vote(uint8)": "41749",
								"voters(address)": "1015"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 572,
									"end": 937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 626,
									"end": 637,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 626,
									"end": 650,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 640,
									"end": 650,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 626,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 663,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 663,
									"end": 682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 663,
									"end": 682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 663,
									"end": 682,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 663,
									"end": 693,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 663,
									"end": 693,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 742,
									"end": 930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 763,
									"end": 776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 783,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 759,
									"end": 760,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 759,
									"end": 783,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 742,
									"end": 930,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 805,
									"end": 814,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 820,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 820,
									"end": 917,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 820,
									"end": 917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 820,
									"end": 917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 868,
									"end": 869,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 854,
									"end": 870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 854,
									"end": 870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 900,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 917,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 820,
									"end": 917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 805,
									"end": 918,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 785,
									"end": 788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 785,
									"end": 788,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 785,
									"end": 788,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 785,
									"end": 788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 785,
									"end": 788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 742,
									"end": 930,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 742,
									"end": 930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 742,
									"end": 930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 572,
									"end": 937,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 199,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 189,
									"end": 201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 232,
									"end": 241,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 302,
									"end": 304,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 320,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 356,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 341,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 394,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 390,
									"end": 392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 409,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 425,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 454,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 446,
									"end": 455,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 477,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 464,
									"end": 500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 527,
									"end": 529,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 530,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 559,
									"end": 561,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 618,
									"end": 625,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 609,
									"end": 611,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 605,
									"end": 616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 601,
									"end": 626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 677,
									"end": 683,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 665,
									"end": 675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 662,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 659,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 645,
									"end": 655,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 642,
									"end": 660,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 685,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 636,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 866,
									"end": 899,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 912,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 910,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 935,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 925,
									"end": 935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 960,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 955,
									"end": 956,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 952,
									"end": 961,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1243,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1324,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1337,
									"end": 1352,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1380,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1559,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1560,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1584,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1608,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1772,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1758,
									"end": 1773,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1796,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1789,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 1797,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2848,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f967abf5e321c96fe5bd25eeaff13c7224d05a083b6afde27a6ca94722fe45964736f6c63430008070033",
									".code": [
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "B3F98ADC"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 430,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 951,
											"end": 1006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 921,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 1013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4043,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4102,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3981,
											"end": 4000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3792,
											"end": 4256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1560,
											"end": 1573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20726967687420746F20766F74652E000000000000"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1552,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520616C726561647920766F7465642E0000000000000000000000000000"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1969,
											"end": 2311,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1619,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3433,
											"end": 3787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1673,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1798,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1817,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "466F756E64206C6F6F7020696E2064656C65676174696F6E0000000000000000"
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3080,
											"end": 3428,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1920,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1792,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2043,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2316,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 2454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1071,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "746F20766F74652E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2695,
											"end": 2714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2316,
											"end": 2720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1053,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F746564000000000000000000"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1612,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1594,
											"end": 1612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1271,
											"end": 1618,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1141,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2565,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520616C726561647920766F746564000000000000000000000000000000"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1623,
											"end": 1964,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2577,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20726967687420746F20766F74652E000000000000"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2725,
											"end": 3075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2630,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000000000000000000000000000000000000000FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2806,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 213,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 415,
											"end": 438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 411,
											"end": 443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 456,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 602,
											"end": 609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 594,
											"end": 626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 591,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 591,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 591,
											"end": 643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 591,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 591,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 688,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 721,
											"end": 726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 717,
											"end": 733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 710,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 697,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 697,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 748,
											"end": 749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4319,
											"end": 4358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4394,
											"end": 4598,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4394,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4432,
											"end": 4435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4465,
											"end": 4466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4497,
											"end": 4498,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4525,
											"end": 4539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4540,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4514,
											"end": 4563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4603,
											"end": 4787,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4603,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4742,
											"end": 4757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4976,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4792,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4921,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4841,
											"end": 4842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4945,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 4946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4970,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"vote(uint8)": "b3f98adc",
							"voters(address)": "a3ec138d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"proposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"weight\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"vote\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"custom/ballot.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"custom/ballot.sol\":{\"keccak256\":\"0x7ebe22c6de5b67baaac6a2efcbafeeb0aa0377aa43f52c814ab26c54baa5b975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1228ac842c18d819a60a2f057c7494c093e9e7678383e7b2ccefd70470f3d5cb\",\"dweb:/ipfs/QmZPExS4By97FEumH9pfxKoPArVzU4sdEaXLevnjcMjsv7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "custom/ballot.sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "custom/ballot.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)10_storage)"
							},
							{
								"astId": 26,
								"contract": "custom/ballot.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)15_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)15_storage)dyn_storage": {
								"base": "t_struct(Proposal)15_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)10_storage"
							},
							"t_struct(Proposal)15_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 12,
										"contract": "custom/ballot.sol:Ballot",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 14,
										"contract": "custom/ballot.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)10_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "custom/ballot.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 5,
										"contract": "custom/ballot.sol:Ballot",
										"label": "voted",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "custom/ballot.sol:Ballot",
										"label": "delegate",
										"offset": 2,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 9,
										"contract": "custom/ballot.sol:Ballot",
										"label": "vote",
										"offset": 22,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"custom/ballot.sol": {
				"ast": {
					"absolutePath": "custom/ballot.sol",
					"exportedSymbols": {
						"Ballot": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "Ballot",
							"nameLocation": "97:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "139:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "133:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "133:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "178:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "173:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "223:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "215:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "215:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "265:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "259:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 8,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "259:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "117:5:0",
									"nodeType": "StructDefinition",
									"scope": 268,
									"src": "110:187:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "357:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "349:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 11,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "349:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "377:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "372:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "372:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "330:8:0",
									"nodeType": "StructDefinition",
									"scope": 268,
									"src": "323:85:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 17,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "445:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "430:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 22,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "495:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "465:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "473:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "465:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "482:5:0"
											},
											"referencedDeclaration": 10,
											"src": "482:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 26,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "554:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "536:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "536:8:0"
											},
											"referencedDeclaration": 15,
											"src": "536:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$15_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 25,
										"nodeType": "ArrayTypeName",
										"src": "536:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "615:322:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "626:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "640:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "640:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "626:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "626:24:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 37,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "663:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 39,
															"indexExpression": {
																"id": 38,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "670:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "663:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "663:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "692:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "663:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "663:30:0"
											},
											{
												"body": {
													"id": 66,
													"nodeType": "Block",
													"src": "790:140:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 59,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "854:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 61,
																				"indexExpression": {
																					"id": 60,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 45,
																					"src": "868:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "854:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 62,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "900:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 58,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "820:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$15_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "820:97:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 55,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "805:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "805:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$15_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "805:113:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "805:113:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 48,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "759:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 49,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "763:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "763:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "759:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"initializationExpression": {
													"assignments": [
														45
													],
													"declarations": [
														{
															"constant": false,
															"id": 45,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "752:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 67,
															"src": "747:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 44,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "747:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 47,
													"initialValue": {
														"hexValue": "30",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "747:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "785:3:0",
														"subExpression": {
															"id": 52,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 54,
													"nodeType": "ExpressionStatement",
													"src": "785:3:0"
												},
												"nodeType": "ForStatement",
												"src": "742:188:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "601:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "584:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "584:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:32:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:0"
									},
									"scope": 268,
									"src": "572:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1042:242:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 75,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1061:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1061:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 77,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1075:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1061:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1053:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1053:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1149:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 83,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1150:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 85,
																	"indexExpression": {
																		"id": 84,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1157:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1150:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1150:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f746564",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1170:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b",
																"typeString": "literal_string \"The voter already voted\""
															},
															"value": "The voter already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b",
																"typeString": "literal_string \"The voter already voted\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1141:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1141:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 92,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1215:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 94,
																	"indexExpression": {
																		"id": 93,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1222:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1215:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1215:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1215:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1207:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1207:34:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 100,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1252:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 102,
															"indexExpression": {
																"id": 101,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "1259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1252:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1252:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1252:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1252:24:0"
											}
										]
									},
									"functionSelector": "9e7b8d61",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1003:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:15:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:0:0"
									},
									"scope": 268,
									"src": "994:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1353:1101:0",
										"statements": [
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1514:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1500:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 114,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 113,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1500:5:0"
															},
															"referencedDeclaration": 10,
															"src": "1500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"baseExpression": {
														"id": 116,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1523:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 119,
													"indexExpression": {
														"expression": {
															"id": 117,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1530:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1523:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1500:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 122,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1560:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1577:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1560:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20726967687420746f20766f74652e",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1579:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															},
															"value": "You have no right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1552:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1552:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1627:13:0",
															"subExpression": {
																"expression": {
																	"id": 130,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1628:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1628:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1619:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1681:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 138,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1687:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1687:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1681:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1673:58:0"
											},
											{
												"body": {
													"id": 168,
													"nodeType": "Block",
													"src": "1832:152:0",
													"statements": [
														{
															"expression": {
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 153,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "1847:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 154,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1852:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																				"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																			}
																		},
																		"id": 156,
																		"indexExpression": {
																			"id": 155,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "1859:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1852:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage",
																			"typeString": "struct Ballot.Voter storage ref"
																		}
																	},
																	"id": 157,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "1852:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1847:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "1847:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 161,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "1928:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 162,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1934:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1934:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1928:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1945:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a",
																			"typeString": "literal_string \"Found loop in delegation\""
																		},
																		"value": "Found loop in delegation"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ddedf7119a73df26b87aea9569ba7e38b10fd306975137a694f09196bfbebf4a",
																			"typeString": "literal_string \"Found loop in delegation\""
																		}
																	],
																	"id": 160,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1920:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1920:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 167,
															"nodeType": "ExpressionStatement",
															"src": "1920:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 144,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1798:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 146,
															"indexExpression": {
																"id": 145,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1805:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1798:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1798:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1829:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1821:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1821:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1798:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "WhileStatement",
												"src": "1792:192:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "delegater",
														"nameLocation": "2010:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1996:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1996:5:0"
															},
															"referencedDeclaration": 10,
															"src": "1996:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"baseExpression": {
														"id": 173,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2022:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 175,
													"indexExpression": {
														"id": 174,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2029:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2022:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1996:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 178,
																	"name": "delegater",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2051:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "2051:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2071:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2051:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2043:30:0"
											},
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2088:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2103:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2088:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2088:19:0"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 190,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2136:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2118:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2118:20:0"
											},
											{
												"condition": {
													"expression": {
														"id": 196,
														"name": "delegater",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2154:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "2154:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 215,
													"nodeType": "Block",
													"src": "2332:115:0",
													"statements": [
														{
															"expression": {
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 208,
																		"name": "delegater",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2402:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2402:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 211,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2422:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2422:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2402:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 214,
															"nodeType": "ExpressionStatement",
															"src": "2402:33:0"
														}
													]
												},
												"id": 216,
												"nodeType": "IfStatement",
												"src": "2151:296:0",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2170:158:0",
													"statements": [
														{
															"expression": {
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 198,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "2264:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 201,
																		"indexExpression": {
																			"expression": {
																				"id": 199,
																				"name": "delegater",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 172,
																				"src": "2274:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 200,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 9,
																			"src": "2274:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2264:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 14,
																	"src": "2264:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 203,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2303:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2303:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2264:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 206,
															"nodeType": "ExpressionStatement",
															"src": "2264:52:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5c19a95c",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "1323:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1340:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1332:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:12:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:0:0"
									},
									"scope": 268,
									"src": "1314:1140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2514:300:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2539:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "2525:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 224,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 223,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "2525:5:0"
															},
															"referencedDeclaration": 10,
															"src": "2525:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"baseExpression": {
														"id": 226,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2548:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 229,
													"indexExpression": {
														"expression": {
															"id": 227,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2555:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2555:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2548:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2525:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2585:13:0",
															"subExpression": {
																"expression": {
																	"id": 232,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2586:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "2586:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f746564",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2599:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258",
																"typeString": "literal_string \"You already voted\""
															},
															"value": "You already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a367851a0c771da96dc9bf474920e21eeb850dad602a0bb6473f03632e01258",
																"typeString": "literal_string \"You already voted\""
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2577:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2577:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 239,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2638:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "2638:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2655:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2638:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20726967687420746f20766f74652e",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2657:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															},
															"value": "You have no right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2630:56:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 246,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2697:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2712:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2697:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2697:19:0"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "2727:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 255,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2741:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2727:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2727:22:0"
											},
											{
												"expression": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 258,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2760:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 260,
															"indexExpression": {
																"id": 259,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2770:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$15_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "2760:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 262,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "2793:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2760:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2760:46:0"
											}
										]
									},
									"functionSelector": "b3f98adc",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "2485:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "2496:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 219,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:16:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:0:0"
									},
									"scope": 268,
									"src": "2476:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "88:2760:0",
							"usedErrors": []
						}
					],
					"src": "33:2815:0"
				},
				"id": 0
			}
		}
	}
}