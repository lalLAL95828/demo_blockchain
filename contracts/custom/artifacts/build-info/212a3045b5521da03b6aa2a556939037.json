{
	"id": "212a3045b5521da03b6aa2a556939037",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"custom/ballot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n\r\n//一个投票的合约\r\ncontract Ballot{\r\n    struct Voter{\r\n        uint8 weight;//投票的权重\r\n        bool voted; //是否已经投票\r\n        address delegate;//投票委托人\r\n        uint8 vote;//被投票对象索引\r\n    }\r\n    //被投票对象\r\n    struct Proposal{\r\n        bytes32 name;\r\n        uint voteCount;//累计票数\r\n    }\r\n\r\n    //主席\r\n    address public chairperson;\r\n\r\n    mapping(address=>Voter)public voters;\r\n\r\n    //被投票对象数组\r\n    Proposal[] public proposals;\r\n\r\n    constructor(bytes32[] memory proposalNames){\r\n        chairperson = msg.sender;\r\n\r\n        voters[chairperson].weight = 1;\r\n\r\n        //循环创建被投票对象\r\n        for (uint i = 0; i < proposalNames.length; i++) {\r\n            proposals.push(Proposal({\r\n                name: proposalNames[i],\r\n                voteCount: 0\r\n            }));\r\n        }\r\n    }\r\n\r\n    //主席赋予投票权\r\n    //外部函数\r\n    function giveRightToVote(address voter) external{\r\n        require(msg.sender == chairperson,\"Only chairperson can give right to vote.\");\r\n        require(!voters[voter].voted,\"The voter already voted\");\r\n        require(voters[voter].weight == 0);\r\n        voters[voter].weight = 1;\r\n    }\r\n\r\n\r\n    //投票委托\r\n    function delegate(address to) external {\r\n        //使用storage类似与指针引用\r\n        //使用memory类似与复制一个副本，修改操作不会在voters上生效\r\n        Voter storage sender = voters[msg.sender];\r\n        require(sender.weight != 0,\"You have no right to vote.\");\r\n        require(!sender.voted,\"You already voted.\");\r\n        require(to != msg.sender,\"Self-delegation is disallowed.\");\r\n\r\n        //委托可能存在循环的情况，\r\n        // while(voters[to].delegate != address(0)){\r\n        //     to = voters[to].delegate;\r\n        //     //阻止循环委托\r\n        //     require(to != msg.sender,\"Found loop in delegation\");\r\n        // }\r\n\r\n        Voter storage delegater = voters[to];\r\n        require(delegater.weight >= 1);\r\n\r\n\r\n        sender.voted = true;\r\n        sender.delegate = to;\r\n\r\n        if(delegater.voted){\r\n            //如果委托者，已经投票，则修改提案的获票数量\r\n            proposals[delegater.vote].voteCount += sender.weight;\r\n        }else{\r\n            //增加权重\r\n            delegater.weight += sender.weight;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"custom/ballot.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "weight",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "vote",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"custom/ballot.sol\":88:2463  contract Ballot{\r... */\n  mstore(0x40, 0x80)\n    /* \"custom/ballot.sol\":581:949  constructor(bytes32[] memory proposalNames){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"custom/ballot.sol\":635:646  chairperson */\n  0x00\n    /* \"custom/ballot.sol\":635:659  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"custom/ballot.sol\":649:659  msg.sender */\n  caller\n    /* \"custom/ballot.sol\":635:659  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"custom/ballot.sol\":672:691  voters[chairperson] */\n  dup2\n  mstore\n    /* \"custom/ballot.sol\":635:659  chairperson = msg.sender */\n  0x01\n    /* \"custom/ballot.sol\":672:691  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"custom/ballot.sol\":672:702  voters[chairperson].weight = 1 */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"custom/ballot.sol\":754:942  for (uint i = 0; i < proposalNames.length; i++) {\r... */\ntag_6:\n    /* \"custom/ballot.sol\":775:788  proposalNames */\n  dup2\n    /* \"custom/ballot.sol\":775:795  proposalNames.length */\n  mload\n    /* \"custom/ballot.sol\":771:772  i */\n  dup2\n    /* \"custom/ballot.sol\":771:795  i < proposalNames.length */\n  lt\n    /* \"custom/ballot.sol\":754:942  for (uint i = 0; i < proposalNames.length; i++) {\r... */\n  iszero\n  tag_7\n  jumpi\n    /* \"custom/ballot.sol\":817:826  proposals */\n  0x02\n    /* \"custom/ballot.sol\":832:929  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"custom/ballot.sol\":866:879  proposalNames */\n  dup5\n    /* \"custom/ballot.sol\":880:881  i */\n  dup5\n    /* \"custom/ballot.sol\":866:882  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"custom/ballot.sol\":832:929  Proposal({\r... */\n  dup3\n  mstore\n    /* \"custom/ballot.sol\":912:913  0 */\n  0x00\n    /* \"custom/ballot.sol\":832:929  Proposal({\r... */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"custom/ballot.sol\":817:930  proposals.push(Proposal({\r... */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"custom/ballot.sol\":797:800  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"custom/ballot.sol\":754:942  for (uint i = 0; i < proposalNames.length; i++) {\r... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"custom/ballot.sol\":581:949  constructor(bytes32[] memory proposalNames){\r... */\n  pop\n    /* \"custom/ballot.sol\":88:2463  contract Ballot{\r... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:1131   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:203   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":199:200   */\n  0x00\n    /* \"#utility.yul\":196:197   */\n  dup1\n    /* \"#utility.yul\":189:201   */\n  revert\n    /* \"#utility.yul\":151:203   */\ntag_18:\n    /* \"#utility.yul\":232:241   */\n  dup3\n    /* \"#utility.yul\":226:242   */\n  mload\n    /* \"#utility.yul\":261:279   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":302:304   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  dup3\n    /* \"#utility.yul\":291:305   */\n  gt\n    /* \"#utility.yul\":288:322   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":315:316   */\n  dup1\n    /* \"#utility.yul\":308:320   */\n  revert\n    /* \"#utility.yul\":288:322   */\ntag_19:\n    /* \"#utility.yul\":356:362   */\n  dup2\n    /* \"#utility.yul\":345:354   */\n  dup6\n    /* \"#utility.yul\":341:363   */\n  add\n    /* \"#utility.yul\":331:363   */\n  swap2\n  pop\n    /* \"#utility.yul\":401:408   */\n  dup6\n    /* \"#utility.yul\":394:398   */\n  0x1f\n    /* \"#utility.yul\":390:392   */\n  dup4\n    /* \"#utility.yul\":386:399   */\n  add\n    /* \"#utility.yul\":382:409   */\n  slt\n    /* \"#utility.yul\":372:427   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":423:424   */\n  0x00\n    /* \"#utility.yul\":420:421   */\n  dup1\n    /* \"#utility.yul\":413:425   */\n  revert\n    /* \"#utility.yul\":372:427   */\ntag_20:\n    /* \"#utility.yul\":452:454   */\n  dup2\n    /* \"#utility.yul\":446:455   */\n  mload\n    /* \"#utility.yul\":474:476   */\n  dup2\n    /* \"#utility.yul\":470:472   */\n  dup2\n    /* \"#utility.yul\":467:477   */\n  gt\n    /* \"#utility.yul\":464:500   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":480:498   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":527:529   */\n  dup4\n    /* \"#utility.yul\":523:525   */\n  dup2\n    /* \"#utility.yul\":519:530   */\n  mul\n    /* \"#utility.yul\":559:561   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  mload\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":618:625   */\n  not\n    /* \"#utility.yul\":613:615   */\n  0x3f\n    /* \"#utility.yul\":609:611   */\n  dup4\n    /* \"#utility.yul\":605:616   */\n  add\n    /* \"#utility.yul\":601:626   */\n  and\n    /* \"#utility.yul\":593:599   */\n  dup2\n    /* \"#utility.yul\":589:627   */\n  add\n    /* \"#utility.yul\":677:683   */\n  dup2\n    /* \"#utility.yul\":665:675   */\n  dup2\n    /* \"#utility.yul\":662:684   */\n  lt\n    /* \"#utility.yul\":657:659   */\n  dup6\n    /* \"#utility.yul\":645:655   */\n  dup3\n    /* \"#utility.yul\":642:660   */\n  gt\n    /* \"#utility.yul\":639:685   */\n  or\n    /* \"#utility.yul\":636:708   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":688:706   */\n  tag_25\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":724:726   */\n  0x40\n    /* \"#utility.yul\":717:739   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":808:823   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":843:854   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":873:884   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":869:889   */\n  dup8\n  add\n    /* \"#utility.yul\":866:899   */\n  dup11\n  lt\n    /* \"#utility.yul\":863:916   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":912:913   */\n  0x00\n    /* \"#utility.yul\":909:910   */\n  dup1\n    /* \"#utility.yul\":902:914   */\n  revert\n    /* \"#utility.yul\":863:916   */\ntag_26:\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":925:935   */\n  swap6\n  pop\n    /* \"#utility.yul\":944:1100   */\ntag_27:\n    /* \"#utility.yul\":958:960   */\n  dup4\n    /* \"#utility.yul\":955:956   */\n  dup7\n    /* \"#utility.yul\":952:961   */\n  lt\n    /* \"#utility.yul\":944:1100   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n  mload\n    /* \"#utility.yul\":1003:1026   */\n  dup6\n  mstore\n    /* \"#utility.yul\":976:977   */\n  0x01\n    /* \"#utility.yul\":969:978   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1046:1058   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1078:1090   */\n  dup7\n  add\n    /* \"#utility.yul\":944:1100   */\n  jump(tag_27)\ntag_29:\n  pop\n    /* \"#utility.yul\":1119:1125   */\n  swap9\n    /* \"#utility.yul\":14:1131   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1136:1425   */\ntag_14:\n    /* \"#utility.yul\":1175:1178   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1196:1213   */\n  dup3\n  eq\n    /* \"#utility.yul\":1193:1390   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1246:1323   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1243:1244   */\n  0x00\n    /* \"#utility.yul\":1236:1324   */\n  mstore\n    /* \"#utility.yul\":1347:1351   */\n  0x11\n    /* \"#utility.yul\":1344:1345   */\n  0x04\n    /* \"#utility.yul\":1337:1352   */\n  mstore\n    /* \"#utility.yul\":1375:1379   */\n  0x24\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1365:1380   */\n  revert\n    /* \"#utility.yul\":1193:1390   */\ntag_31:\n  pop\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n  swap1\n    /* \"#utility.yul\":1136:1425   */\n  jump\t// out\n    /* \"#utility.yul\":1430:1614   */\ntag_11:\n    /* \"#utility.yul\":1482:1559   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1479:1480   */\n  0x00\n    /* \"#utility.yul\":1472:1560   */\n  mstore\n    /* \"#utility.yul\":1579:1583   */\n  0x32\n    /* \"#utility.yul\":1576:1577   */\n  0x04\n    /* \"#utility.yul\":1569:1584   */\n  mstore\n    /* \"#utility.yul\":1603:1607   */\n  0x24\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1593:1608   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_23:\n    /* \"#utility.yul\":1671:1748   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1668:1669   */\n  0x00\n    /* \"#utility.yul\":1661:1749   */\n  mstore\n    /* \"#utility.yul\":1768:1772   */\n  0x41\n    /* \"#utility.yul\":1765:1766   */\n  0x04\n    /* \"#utility.yul\":1758:1773   */\n  mstore\n    /* \"#utility.yul\":1792:1796   */\n  0x24\n    /* \"#utility.yul\":1789:1790   */\n  0x00\n    /* \"#utility.yul\":1782:1797   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_16:\n    /* \"custom/ballot.sol\":88:2463  contract Ballot{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"custom/ballot.sol\":88:2463  contract Ballot{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      div(calldataload(0x00), 0x0100000000000000000000000000000000000000000000000000000000)\n      0x013cf08b\n      dup2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"custom/ballot.sol\":545:572  Proposal[] public proposals */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":918:943   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":974:976   */\n      0x20\n        /* \"#utility.yul\":959:977   */\n      dup4\n      add\n        /* \"#utility.yul\":952:986   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":891:909   */\n      add\n        /* \"custom/ballot.sol\":545:572  Proposal[] public proposals */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"custom/ballot.sol\":436:462  address public chairperson */\n    tag_4:\n      sload(0x00)\n      tag_14\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":677:732   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":659:733   */\n      dup2\n      mstore\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      add\n        /* \"custom/ballot.sol\":436:462  address public chairperson */\n      tag_12\n        /* \"#utility.yul\":513:739   */\n      jump\n        /* \"custom/ballot.sol\":1326:2456  function delegate(address to) external {\r... */\n    tag_5:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"custom/ballot.sol\":1006:1296  function giveRightToVote(address voter) external{\r... */\n    tag_6:\n      tag_18\n      tag_23\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"custom/ballot.sol\":471:507  mapping(address=>Voter)public voters */\n    tag_7:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      dup2\n      div\n      dup3\n      and\n      swap2\n      sub(exp(0x02, 0xa0), 0x01)\n      0x010000\n      dup4\n      div\n      and\n      swap2\n      0x0100000000000000000000000000000000000000000000\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3066:3070   */\n      0xff\n        /* \"#utility.yul\":3054:3071   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":3036:3072   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3115:3129   */\n      swap4\n      iszero\n        /* \"#utility.yul\":3108:3130   */\n      iszero\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3088:3106   */\n      dup6\n      add\n        /* \"#utility.yul\":3081:3131   */\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":3167:3222   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3147:3165   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3140:3223   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3259:3276   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3254:3256   */\n      0x60\n        /* \"#utility.yul\":3239:3257   */\n      dup3\n      add\n        /* \"#utility.yul\":3232:3277   */\n      mstore\n        /* \"#utility.yul\":3023:3026   */\n      0x80\n        /* \"#utility.yul\":3008:3027   */\n      add\n        /* \"custom/ballot.sol\":471:507  mapping(address=>Voter)public voters */\n      tag_12\n        /* \"#utility.yul\":2819:3283   */\n      jump\n        /* \"custom/ballot.sol\":545:572  Proposal[] public proposals */\n    tag_11:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"custom/ballot.sol\":1326:2456  function delegate(address to) external {\r... */\n    tag_21:\n        /* \"custom/ballot.sol\":1542:1552  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1512:1532  Voter storage sender */\n      0x00\n        /* \"custom/ballot.sol\":1535:1553  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1535:1541  voters */\n      0x01\n        /* \"custom/ballot.sol\":1535:1553  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1572:1585  sender.weight */\n      dup1\n      sload\n      0xff\n      and\n        /* \"custom/ballot.sol\":1564:1620  require(sender.weight != 0,\"You have no right to vote.\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"custom/ballot.sol\":1564:1620  require(sender.weight != 0,\"You have no right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2289:2310   */\n      mstore\n        /* \"#utility.yul\":2346:2348   */\n      0x1a\n        /* \"#utility.yul\":2326:2344   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2319:2349   */\n      mstore\n        /* \"#utility.yul\":2385:2413   */\n      0x596f752068617665206e6f20726967687420746f20766f74652e000000000000\n        /* \"#utility.yul\":2365:2383   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2358:2414   */\n      mstore\n        /* \"#utility.yul\":2431:2449   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1564:1620  require(sender.weight != 0,\"You have no right to vote.\") */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"custom/ballot.sol\":1640:1652  sender.voted */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"custom/ballot.sol\":1639:1652  !sender.voted */\n      iszero\n        /* \"custom/ballot.sol\":1631:1674  require(!sender.voted,\"You already voted.\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"custom/ballot.sol\":1631:1674  require(!sender.voted,\"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1533:1554   */\n      mstore\n        /* \"#utility.yul\":1590:1592   */\n      0x12\n        /* \"#utility.yul\":1570:1588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1563:1593   */\n      mstore\n        /* \"#utility.yul\":1629:1649   */\n      0x596f7520616c726561647920766f7465642e0000000000000000000000000000\n        /* \"#utility.yul\":1609:1627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1602:1650   */\n      mstore\n        /* \"#utility.yul\":1667:1685   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1631:1674  require(!sender.voted,\"You already voted.\") */\n      tag_34\n        /* \"#utility.yul\":1349:1691   */\n      jump\n        /* \"custom/ballot.sol\":1631:1674  require(!sender.voted,\"You already voted.\") */\n    tag_36:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1693:1709  to != msg.sender */\n      dup3\n      and\n        /* \"custom/ballot.sol\":1699:1709  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1693:1709  to != msg.sender */\n      eq\n      iszero\n        /* \"custom/ballot.sol\":1685:1743  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2662:2664   */\n      0x20\n        /* \"custom/ballot.sol\":1685:1743  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2644:2665   */\n      mstore\n        /* \"#utility.yul\":2701:2703   */\n      0x1e\n        /* \"#utility.yul\":2681:2699   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2674:2704   */\n      mstore\n        /* \"#utility.yul\":2740:2772   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":2720:2738   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2713:2773   */\n      mstore\n        /* \"#utility.yul\":2790:2808   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1685:1743  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n      tag_34\n        /* \"#utility.yul\":2460:2814   */\n      jump\n        /* \"custom/ballot.sol\":1685:1743  require(to != msg.sender,\"Self-delegation is disallowed.\") */\n    tag_39:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":2049:2059  voters[to] */\n      dup3\n      and\n        /* \"custom/ballot.sol\":2023:2046  Voter storage delegater */\n      0x00\n        /* \"custom/ballot.sol\":2049:2059  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":2049:2055  voters */\n      0x01\n        /* \"custom/ballot.sol\":2049:2059  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"custom/ballot.sol\":2078:2094  delegater.weight */\n      dup1\n      sload\n        /* \"custom/ballot.sol\":2049:2059  voters[to] */\n      swap1\n      swap2\n        /* \"custom/ballot.sol\":2078:2094  delegater.weight */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"custom/ballot.sol\":2078:2099  delegater.weight >= 1 */\n      lt\n      iszero\n        /* \"custom/ballot.sol\":2070:2100  require(delegater.weight >= 1) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"custom/ballot.sol\":2115:2134  sender.voted = true */\n      dup2\n      sload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":2145:2165  sender.delegate = to */\n      dup5\n      and\n      0x010000\n      mul\n      not(0xffffffffffffffffffffffffffffffffffffffffff00)\n      swap1\n      swap2\n      and\n      or\n        /* \"custom/ballot.sol\":2115:2134  sender.voted = true */\n      0x0100\n        /* \"custom/ballot.sol\":2145:2165  sender.delegate = to */\n      swap1\n      dup2\n      or\n      dup4\n      sstore\n        /* \"custom/ballot.sol\":2181:2196  delegater.voted */\n      dup2\n      sload\n      div\n        /* \"custom/ballot.sol\":2115:2134  sender.voted = true */\n      0xff\n        /* \"custom/ballot.sol\":2181:2196  delegater.voted */\n      and\n        /* \"custom/ballot.sol\":2178:2447  if(delegater.voted){\r... */\n      iszero\n      tag_43\n      jumpi\n        /* \"custom/ballot.sol\":2330:2343  sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2301:2315  delegater.vote */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2291:2300  proposals */\n      0x02\n        /* \"custom/ballot.sol\":2291:2316  proposals[delegater.vote] */\n      dup1\n      sload\n        /* \"custom/ballot.sol\":2330:2343  sender.weight */\n      0xff\n      swap4\n      dup5\n      and\n      swap4\n        /* \"custom/ballot.sol\":2291:2300  proposals */\n      swap2\n      swap3\n        /* \"custom/ballot.sol\":2301:2315  delegater.vote */\n      0x0100000000000000000000000000000000000000000000\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"custom/ballot.sol\":2291:2316  proposals[delegater.vote] */\n      dup2\n      lt\n      tag_45\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"custom/ballot.sol\":2291:2326  proposals[delegater.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"custom/ballot.sol\":2291:2343  proposals[delegater.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"custom/ballot.sol\":2178:2447  if(delegater.voted){\r... */\n      tag_50\n      swap1\n      pop\n      jump\n    tag_43:\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      dup2\n      sload\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      0xff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"custom/ballot.sol\":2402:2411  delegater */\n      dup4\n      swap2\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      0x00\n      swap2\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      tag_51\n      swap2\n        /* \"custom/ballot.sol\":2422:2435  sender.weight */\n      dup6\n      swap2\n        /* \"custom/ballot.sol\":2402:2435  delegater.weight += sender.weight */\n      and\n      tag_52\n      jump\t// in\n    tag_51:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"custom/ballot.sol\":2178:2447  if(delegater.voted){\r... */\n    tag_50:\n        /* \"custom/ballot.sol\":1365:2456  {\r... */\n      pop\n      pop\n        /* \"custom/ballot.sol\":1326:2456  function delegate(address to) external {\r... */\n      pop\n      jump\t// out\n        /* \"custom/ballot.sol\":1006:1296  function giveRightToVote(address voter) external{\r... */\n    tag_24:\n        /* \"custom/ballot.sol\":1087:1098  chairperson */\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x00))\n        /* \"custom/ballot.sol\":1073:1083  msg.sender */\n      caller\n        /* \"custom/ballot.sol\":1073:1098  msg.sender == chairperson */\n      eq\n        /* \"custom/ballot.sol\":1065:1142  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1898:1900   */\n      0x20\n        /* \"custom/ballot.sol\":1065:1142  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1880:1901   */\n      mstore\n        /* \"#utility.yul\":1937:1939   */\n      0x28\n        /* \"#utility.yul\":1917:1935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1910:1940   */\n      mstore\n        /* \"#utility.yul\":1976:2010   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":1956:1974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1949:2011   */\n      mstore\n        /* \"#utility.yul\":2047:2057   */\n      0x746f20766f74652e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2027:2045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2020:2058   */\n      mstore\n        /* \"#utility.yul\":2075:2094   */\n      0x84\n      add\n        /* \"custom/ballot.sol\":1065:1142  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n      tag_34\n        /* \"#utility.yul\":1696:2100   */\n      jump\n        /* \"custom/ballot.sol\":1065:1142  require(msg.sender == chairperson,\"Only chairperson can give right to vote.\") */\n    tag_54:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1162:1175  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1162:1168  voters */\n      0x01\n        /* \"custom/ballot.sol\":1162:1175  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1162:1181  voters[voter].voted */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"custom/ballot.sol\":1161:1181  !voters[voter].voted */\n      iszero\n        /* \"custom/ballot.sol\":1153:1208  require(!voters[voter].voted,\"The voter already voted\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1199:1201   */\n      0x20\n        /* \"custom/ballot.sol\":1153:1208  require(!voters[voter].voted,\"The voter already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1181:1202   */\n      mstore\n        /* \"#utility.yul\":1238:1240   */\n      0x17\n        /* \"#utility.yul\":1218:1236   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1211:1241   */\n      mstore\n        /* \"#utility.yul\":1277:1302   */\n      0x54686520766f74657220616c726561647920766f746564000000000000000000\n        /* \"#utility.yul\":1257:1275   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1250:1303   */\n      mstore\n        /* \"#utility.yul\":1320:1338   */\n      0x64\n      add\n        /* \"custom/ballot.sol\":1153:1208  require(!voters[voter].voted,\"The voter already voted\") */\n      tag_34\n        /* \"#utility.yul\":997:1344   */\n      jump\n        /* \"custom/ballot.sol\":1153:1208  require(!voters[voter].voted,\"The voter already voted\") */\n    tag_57:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1227:1240  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1227:1233  voters */\n      0x01\n        /* \"custom/ballot.sol\":1227:1240  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"custom/ballot.sol\":1227:1247  voters[voter].weight */\n      sload\n      0xff\n      and\n        /* \"custom/ballot.sol\":1227:1252  voters[voter].weight == 0 */\n      iszero\n        /* \"custom/ballot.sol\":1219:1253  require(voters[voter].weight == 0) */\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"custom/ballot.sol\":1264:1277  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"custom/ballot.sol\":1287:1288  1 */\n      0x01\n        /* \"custom/ballot.sol\":1264:1277  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"custom/ballot.sol\":1264:1288  voters[voter].weight = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"custom/ballot.sol\":1006:1296  function giveRightToVote(address voter) external{\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:323   */\n    tag_20:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_63:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":220:274   */\n      and\n        /* \"#utility.yul\":213:218   */\n      dup2\n        /* \"#utility.yul\":210:275   */\n      eq\n        /* \"#utility.yul\":200:293   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":200:293   */\n    tag_64:\n        /* \"#utility.yul\":312:317   */\n      swap4\n        /* \"#utility.yul\":14:323   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":328:508   */\n    tag_10:\n        /* \"#utility.yul\":387:393   */\n      0x00\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":428:437   */\n      dup3\n        /* \"#utility.yul\":419:426   */\n      dup5\n        /* \"#utility.yul\":415:438   */\n      sub\n        /* \"#utility.yul\":411:443   */\n      slt\n        /* \"#utility.yul\":408:460   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":456:457   */\n      0x00\n        /* \"#utility.yul\":453:454   */\n      dup1\n        /* \"#utility.yul\":446:458   */\n      revert\n        /* \"#utility.yul\":408:460   */\n    tag_66:\n      pop\n        /* \"#utility.yul\":479:502   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":328:508   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3288:3416   */\n    tag_49:\n        /* \"#utility.yul\":3328:3331   */\n      0x00\n        /* \"#utility.yul\":3359:3360   */\n      dup3\n        /* \"#utility.yul\":3355:3361   */\n      not\n        /* \"#utility.yul\":3352:3353   */\n      dup3\n        /* \"#utility.yul\":3349:3362   */\n      gt\n        /* \"#utility.yul\":3346:3385   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3365:3383   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      pop\n        /* \"#utility.yul\":3401:3410   */\n      add\n      swap1\n        /* \"#utility.yul\":3288:3416   */\n      jump\t// out\n        /* \"#utility.yul\":3421:3625   */\n    tag_52:\n        /* \"#utility.yul\":3459:3462   */\n      0x00\n        /* \"#utility.yul\":3495:3499   */\n      0xff\n        /* \"#utility.yul\":3492:3493   */\n      dup3\n        /* \"#utility.yul\":3488:3500   */\n      and\n        /* \"#utility.yul\":3527:3531   */\n      0xff\n        /* \"#utility.yul\":3524:3525   */\n      dup5\n        /* \"#utility.yul\":3520:3532   */\n      and\n        /* \"#utility.yul\":3562:3565   */\n      dup1\n        /* \"#utility.yul\":3556:3560   */\n      0xff\n        /* \"#utility.yul\":3552:3566   */\n      sub\n        /* \"#utility.yul\":3547:3550   */\n      dup3\n        /* \"#utility.yul\":3544:3567   */\n      gt\n        /* \"#utility.yul\":3541:3590   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3570:3588   */\n      tag_81\n      tag_78\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3606:3619   */\n      add\n      swap4\n        /* \"#utility.yul\":3421:3625   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3814   */\n    tag_78:\n        /* \"#utility.yul\":3682:3759   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3679:3680   */\n      0x00\n        /* \"#utility.yul\":3672:3760   */\n      mstore\n        /* \"#utility.yul\":3779:3783   */\n      0x11\n        /* \"#utility.yul\":3776:3777   */\n      0x04\n        /* \"#utility.yul\":3769:3784   */\n      mstore\n        /* \"#utility.yul\":3803:3807   */\n      0x24\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3793:3808   */\n      revert\n        /* \"#utility.yul\":3819:4003   */\n    tag_46:\n        /* \"#utility.yul\":3871:3948   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3868:3869   */\n      0x00\n        /* \"#utility.yul\":3861:3949   */\n      mstore\n        /* \"#utility.yul\":3968:3972   */\n      0x32\n        /* \"#utility.yul\":3965:3966   */\n      0x04\n        /* \"#utility.yul\":3958:3973   */\n      mstore\n        /* \"#utility.yul\":3992:3996   */\n      0x24\n        /* \"#utility.yul\":3989:3990   */\n      0x00\n        /* \"#utility.yul\":3982:3997   */\n      revert\n\n    auxdata: 0xa26469706673582212204a970841ff188f7bc8345b916fad680800bca564b84d031898cace53869ada5d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1805:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1011:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "251:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "261:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "255:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "294:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "302:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "291:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"nodeType": "YulIf",
															"src": "288:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "335:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "390:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "386:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:35:1"
															},
															"nodeType": "YulIf",
															"src": "372:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "452:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "440:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "470:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "467:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:10:1"
															},
															"nodeType": "YulIf",
															"src": "464:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "523:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "559:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "553:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "543:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "571:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "609:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "613:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "605:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "605:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "622:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "575:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "686:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "688:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "688:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "645:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "657:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "642:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "665:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "677:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "662:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "639:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:46:1"
															},
															"nodeType": "YulIf",
															"src": "636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "728:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "748:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "759:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "752:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "820:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "832:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "847:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "851:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "836:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "877:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "873:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "873:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "886:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "891:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:33:1"
															},
															"nodeType": "YulIf",
															"src": "863:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "925:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "934:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "929:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1010:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1021:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1015:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1003:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1003:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1039:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1055:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1046:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1039:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1071:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1078:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "955:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "958:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "962:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "964:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "973:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "969:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "969:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "964:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "948:3:1",
																"statements": []
															},
															"src": "944:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1109:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1119:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1246:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1236:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1236:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1199:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1210:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1196:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:17:1"
															},
															"nodeType": "YulIf",
															"src": "1193:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1410:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1136:289:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1651:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161088638038061088683398101604081905261002f916100d6565b60008054600160a060020a03191633908117825581526001602081905260408220805460ff191690911790555b81518110156100cf5760026040518060400160405280848481518110610084576100846101dc565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100c78161019a565b91505061005c565b505061023a565b600060208083850312156100e957600080fd5b825167ffffffffffffffff8082111561010157600080fd5b818501915085601f83011261011557600080fd5b8151818111156101275761012761020b565b838102604051601f19603f8301168101818110858211171561014b5761014b61020b565b604052828152858101935084860182860187018a101561016a57600080fd5b600095505b8386101561018d57805185526001959095019493860193860161016f565b5098975050505050505050565b60006000198214156101d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61063d806102496000396000f3fe608060405234801561001057600080fd5b5060043610610073577c01000000000000000000000000000000000000000000000000000000006000350463013cf08b81146100785780632e4176cf146100a55780635c19a95c146100d05780639e7b8d61146100e5578063a3ec138d146100f8575b600080fd5b61008b610086366004610553565b610187565b604080519283526020830191909152015b60405180910390f35b6000546100b890600160a060020a031681565b604051600160a060020a03909116815260200161009c565b6100e36100de366004610523565b6101b5565b005b6100e36100f3366004610523565b6103e2565b610151610106366004610523565b60016020526000908152604090205460ff808216916101008104821691600160a060020a03620100008304169176010000000000000000000000000000000000000000000090041684565b6040805160ff95861681529315156020850152600160a060020a039092169183019190915291909116606082015260800161009c565b6002818154811061019757600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020805460ff1661021d5760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e00000000000060448201526064015b60405180910390fd5b8054610100900460ff16156102775760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610214565b600160a060020a0382163314156102d35760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610214565b600160a060020a03821660009081526001602081905260409091208054909160ff909116101561030257600080fd5b8154600160a060020a038416620100000275ffffffffffffffffffffffffffffffffffffffffff001990911617610100908117835581540460ff16156103a957815481546002805460ff938416939192760100000000000000000000000000000000000000000000900490911690811061037e5761037e6105d8565b9060005260206000209060020201600101600082825461039e919061056c565b909155506103dd9050565b8154815460ff9182169183916000916103c491859116610584565b92506101000a81548160ff021916908360ff1602179055505b505050565b600054600160a060020a031633146104655760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610214565b600160a060020a038116600090815260016020526040902054610100900460ff16156104d65760405160e560020a62461bcd02815260206004820152601760248201527f54686520766f74657220616c726561647920766f7465640000000000000000006044820152606401610214565b600160a060020a03811660009081526001602052604090205460ff16156104fc57600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561053557600080fd5b8135600160a060020a038116811461054c57600080fd5b9392505050565b60006020828403121561056557600080fd5b5035919050565b6000821982111561057f5761057f6105a9565b500190565b600060ff821660ff84168060ff038211156105a1576105a16105a9565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204a970841ff188f7bc8345b916fad680800bca564b84d031898cace53869ada5d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x886 CODESIZE SUB DUP1 PUSH2 0x886 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x84 JUMPI PUSH2 0x84 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xC7 DUP2 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C JUMP JUMPDEST POP POP PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH2 0x127 PUSH2 0x20B JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x14B JUMPI PUSH2 0x14B PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x18D JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x16F JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x63D DUP1 PUSH2 0x249 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x13CF08B DUP2 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB8 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x9C JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 SWAP1 DUP2 OR DUP4 SSTORE DUP2 SLOAD DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A9 JUMPI DUP2 SLOAD DUP2 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND SWAP4 SWAP2 SWAP3 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 LT PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0x5D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x56C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3DD SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3C4 SWAP2 DUP6 SWAP2 AND PUSH2 0x584 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x5A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A1 PUSH2 0x5A9 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP8 ADDMOD COINBASE SELFDESTRUCT XOR DUP16 PUSH28 0xC8345B916FAD680800BCA564B84D031898CACE53869ADA5D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "88:2375:0:-:0;;;581:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;635:11;:24;;-1:-1:-1;;;;;;635:24:0;649:10;635:24;;;;;672:19;;635:24;672:19;;;;;;;:30;;-1:-1:-1;;672:30:0;;;;;;754:188;775:13;:20;771:1;:24;754:188;;;817:9;832:97;;;;;;;;866:13;880:1;866:16;;;;;;;;:::i;:::-;;;;;;;;;;;;832:97;;912:1;832:97;;;;;;817:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:3;;;;:::i;:::-;;;;754:188;;;;581:368;88:2375;;14:1117:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:52;;;199:1;196;189:12;151:52;232:9;226:16;261:18;302:2;294:6;291:14;288:34;;;318:1;315;308:12;288:34;356:6;345:9;341:22;331:32;;401:7;394:4;390:2;386:13;382:27;372:55;;423:1;420;413:12;372:55;452:2;446:9;474:2;470;467:10;464:36;;;480:18;;:::i;:::-;527:2;523;519:11;559:2;553:9;622:2;618:7;613:2;609;605:11;601:25;593:6;589:38;677:6;665:10;662:22;657:2;645:10;642:18;639:46;636:72;;;688:18;;:::i;:::-;724:2;717:22;774:18;;;808:15;;;;-1:-1:-1;843:11:1;;;873;;;869:20;;866:33;-1:-1:-1;863:53:1;;;912:1;909;902:12;863:53;934:1;925:10;;944:156;958:2;955:1;952:9;944:156;;;1015:10;;1003:23;;976:1;969:9;;;;;1046:12;;;;1078;;944:156;;;-1:-1:-1;1119:6:1;14:1117;-1:-1:-1;;;;;;;;14:1117:1:o;1136:289::-;1175:3;-1:-1:-1;;1196:17:1;;1193:197;;;1246:77;1243:1;1236:88;1347:4;1344:1;1337:15;1375:4;1372:1;1365:15;1193:197;-1:-1:-1;1417:1:1;1406:13;;1136:289::o;1430:184::-;1482:77;1479:1;1472:88;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:184;1671:77;1668:1;1661:88;1768:4;1765:1;1758:15;1792:4;1789:1;1782:15;1619:184;88:2375:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairperson_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegate_192": {
									"entryPoint": 437,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@giveRightToVote_108": {
									"entryPoint": 994,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proposals_26": {
									"entryPoint": 391,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4005:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:239:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "231:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:73:1"
															},
															"nodeType": "YulIf",
															"src": "200:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "312:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "398:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "446:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "415:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:32:1"
															},
															"nodeType": "YulIf",
															"src": "408:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "469:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "492:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "479:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "469:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "375:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "387:6:1",
														"type": ""
													}
												],
												"src": "328:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "614:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "624:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "636:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "647:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "624:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "666:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "681:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "689:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "659:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "583:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "594:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "605:4:1",
														"type": ""
													}
												],
												"src": "513:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "873:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "883:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "925:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "936:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "918:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "974:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "959:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "979:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "952:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "834:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "845:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "853:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "864:4:1",
														"type": ""
													}
												],
												"src": "744:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1188:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1199:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1181:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1272:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1277:25:1",
																		"type": "",
																		"value": "The voter already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1250:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1250:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1312:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1148:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1162:4:1",
														"type": ""
													}
												],
												"src": "997:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1540:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1585:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1563:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1624:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1629:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1659:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1671:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1667:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1659:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1514:4:1",
														"type": ""
													}
												],
												"src": "1349:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1870:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1887:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1898:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1880:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1917:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1937:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1910:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1910:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1956:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1976:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2042:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2027:18:1"
																	},
																	{
																		"hexValue": "746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2047:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2020:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2067:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2079:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2067:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1847:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1861:4:1",
														"type": ""
													}
												],
												"src": "1696:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2289:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20726967687420746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:28:1",
																		"type": "",
																		"value": "You have no right to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2256:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:1",
														"type": ""
													}
												],
												"src": "2105:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2634:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2644:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2696:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2701:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2724:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2735:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:18:1"
																	},
																	{
																		"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2740:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2782:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2611:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2625:4:1",
														"type": ""
													}
												],
												"src": "2460:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2990:293:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3000:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3012:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3008:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3000:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3066:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3036:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3092:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3103:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3088:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3122:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3115:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3108:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3081:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:83:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:83:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3254:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3239:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3271:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2946:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2954:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2962:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2970:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2981:4:1",
														"type": ""
													}
												],
												"src": "2819:464:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3336:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3363:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3365:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3365:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3352:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3359:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3349:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:13:1"
															},
															"nodeType": "YulIf",
															"src": "3346:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3394:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3405:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3408:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3319:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3322:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3328:3:1",
														"type": ""
													}
												],
												"src": "3288:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3467:158:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3477:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3492:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:12:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "3481:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3509:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3524:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:12:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "3513:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3568:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3570:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "3547:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3556:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "3562:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3552:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3544:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:23:1"
															},
															"nodeType": "YulIf",
															"src": "3541:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3599:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "3610:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "3615:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3450:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3453:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3459:3:1",
														"type": ""
													}
												],
												"src": "3421:204:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3662:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3682:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3672:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3776:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3779:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3769:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3793:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3630:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3851:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3868:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3861:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3968:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3958:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3958:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3992:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3982:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3819:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"The voter already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You have no right to vote.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8_t_bool_t_address_t_uint8__to_t_uint8_t_bool_t_address_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060043610610073577c01000000000000000000000000000000000000000000000000000000006000350463013cf08b81146100785780632e4176cf146100a55780635c19a95c146100d05780639e7b8d61146100e5578063a3ec138d146100f8575b600080fd5b61008b610086366004610553565b610187565b604080519283526020830191909152015b60405180910390f35b6000546100b890600160a060020a031681565b604051600160a060020a03909116815260200161009c565b6100e36100de366004610523565b6101b5565b005b6100e36100f3366004610523565b6103e2565b610151610106366004610523565b60016020526000908152604090205460ff808216916101008104821691600160a060020a03620100008304169176010000000000000000000000000000000000000000000090041684565b6040805160ff95861681529315156020850152600160a060020a039092169183019190915291909116606082015260800161009c565b6002818154811061019757600080fd5b60009182526020909120600290910201805460019091015490915082565b336000908152600160205260409020805460ff1661021d5760405160e560020a62461bcd02815260206004820152601a60248201527f596f752068617665206e6f20726967687420746f20766f74652e00000000000060448201526064015b60405180910390fd5b8054610100900460ff16156102775760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610214565b600160a060020a0382163314156102d35760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610214565b600160a060020a03821660009081526001602081905260409091208054909160ff909116101561030257600080fd5b8154600160a060020a038416620100000275ffffffffffffffffffffffffffffffffffffffffff001990911617610100908117835581540460ff16156103a957815481546002805460ff938416939192760100000000000000000000000000000000000000000000900490911690811061037e5761037e6105d8565b9060005260206000209060020201600101600082825461039e919061056c565b909155506103dd9050565b8154815460ff9182169183916000916103c491859116610584565b92506101000a81548160ff021916908360ff1602179055505b505050565b600054600160a060020a031633146104655760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610214565b600160a060020a038116600090815260016020526040902054610100900460ff16156104d65760405160e560020a62461bcd02815260206004820152601760248201527f54686520766f74657220616c726561647920766f7465640000000000000000006044820152606401610214565b600160a060020a03811660009081526001602052604090205460ff16156104fc57600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561053557600080fd5b8135600160a060020a038116811461054c57600080fd5b9392505050565b60006020828403121561056557600080fd5b5035919050565b6000821982111561057f5761057f6105a9565b500190565b600060ff821660ff84168060ff038211156105a1576105a16105a9565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204a970841ff188f7bc8345b916fad680800bca564b84d031898cace53869ada5d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x13CF08B DUP2 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB8 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x9C JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20726967687420746F20766F74652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH3 0x10000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR PUSH2 0x100 SWAP1 DUP2 OR DUP4 SSTORE DUP2 SLOAD DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A9 JUMPI DUP2 SLOAD DUP2 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND SWAP4 SWAP2 SWAP3 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP2 LT PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0x5D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x56C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3DD SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3C4 SWAP2 DUP6 SWAP2 AND PUSH2 0x584 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x5A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A1 PUSH2 0x5A9 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP8 ADDMOD COINBASE SELFDESTRUCT XOR DUP16 PUSH28 0xC8345B916FAD680800BCA564B84D031898CACE53869ADA5D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "88:2375:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:27;;;;;;:::i;:::-;;:::i;:::-;;;;918:25:1;;;974:2;959:18;;952:34;;;;891:18;545:27:0;;;;;;;;436:26;;;;;-1:-1:-1;;;;;436:26:0;;;;;;-1:-1:-1;;;;;677:55:1;;;659:74;;647:2;632:18;436:26:0;513:226:1;1326:1130:0;;;;;;:::i;:::-;;:::i;:::-;;1006:290;;;;;;:::i;:::-;;:::i;471:36::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;471:36:0;;;;;;;;;;;;;;;3066:4:1;3054:17;;;3036:36;;3115:14;;3108:22;3103:2;3088:18;;3081:50;-1:-1:-1;;;;;3167:55:1;;;3147:18;;;3140:83;;;;3259:17;;;;3254:2;3239:18;;3232:45;3023:3;3008:19;471:36:0;2819:464:1;545:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;545:27:0;:::o;1326:1130::-;1542:10;1512:20;1535:18;;;:6;:18;;;;;1572:13;;;;1564:56;;;;-1:-1:-1;;;;;1564:56:0;;2307:2:1;1564:56:0;;;2289:21:1;2346:2;2326:18;;;2319:30;2385:28;2365:18;;;2358:56;2431:18;;1564:56:0;;;;;;;;;1640:12;;;;;;;1639:13;1631:43;;;;-1:-1:-1;;;;;1631:43:0;;1551:2:1;1631:43:0;;;1533:21:1;1590:2;1570:18;;;1563:30;1629:20;1609:18;;;1602:48;1667:18;;1631:43:0;1349:342:1;1631:43:0;-1:-1:-1;;;;;1693:16:0;;1699:10;1693:16;;1685:58;;;;-1:-1:-1;;;;;1685:58:0;;2662:2:1;1685:58:0;;;2644:21:1;2701:2;2681:18;;;2674:30;2740:32;2720:18;;;2713:60;2790:18;;1685:58:0;2460:354:1;1685:58:0;-1:-1:-1;;;;;2049:10:0;;2023:23;2049:10;;;:6;:10;;;;;;;;2078:16;;2049:10;;2078:16;;;;:21;;2070:30;;;;;;2115:19;;-1:-1:-1;;;;;2145:20:0;;;;-1:-1:-1;;2145:20:0;;;;2115:19;2145:20;;;;;2181:15;;;2115:19;2181:15;2178:269;;;2330:13;;2301:14;;2291:9;:25;;2330:13;;;;;2291:9;;2301:14;;;;;;;2291:25;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;2178:269:0;;-1:-1:-1;2178:269:0;;2422:13;;2402:33;;2422:13;;;;;2402:9;;2422:13;;2402:33;;2422:13;;2402:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2178:269;1365:1091;;1326:1130;:::o;1006:290::-;1087:11;;-1:-1:-1;;;;;1087:11:0;1073:10;:25;1065:77;;;;-1:-1:-1;;;;;1065:77:0;;1898:2:1;1065:77:0;;;1880:21:1;1937:2;1917:18;;;1910:30;1976:34;1956:18;;;1949:62;2047:10;2027:18;;;2020:38;2075:19;;1065:77:0;1696:404:1;1065:77:0;-1:-1:-1;;;;;1162:13:0;;;;;;:6;:13;;;;;:19;;;;;;1161:20;1153:55;;;;-1:-1:-1;;;;;1153:55:0;;1199:2:1;1153:55:0;;;1181:21:1;1238:2;1218:18;;;1211:30;1277:25;1257:18;;;1250:53;1320:18;;1153:55:0;997:347:1;1153:55:0;-1:-1:-1;;;;;1227:13:0;;;;;;:6;:13;;;;;:20;;;:25;1219:34;;;;;;-1:-1:-1;;;;;1264:13:0;;;;;1287:1;1264:13;;;;;;;;:24;;-1:-1:-1;;1264:24:0;;;;;;1006:290::o;14:309:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:1;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:1:o;328:180::-;387:6;440:2;428:9;419:7;415:23;411:32;408:52;;;456:1;453;446:12;408:52;-1:-1:-1;479:23:1;;328:180;-1:-1:-1;328:180:1:o;3288:128::-;3328:3;3359:1;3355:6;3352:1;3349:13;3346:39;;;3365:18;;:::i;:::-;-1:-1:-1;3401:9:1;;3288:128::o;3421:204::-;3459:3;3495:4;3492:1;3488:12;3527:4;3524:1;3520:12;3562:3;3556:4;3552:14;3547:3;3544:23;3541:49;;;3570:18;;:::i;:::-;3606:13;;3421:204;-1:-1:-1;;;3421:204:1:o;3630:184::-;3682:77;3679:1;3672:88;3779:4;3776:1;3769:15;3803:4;3800:1;3793:15;3819:184;3871:77;3868:1;3861:88;3968:4;3965:1;3958:15;3992:4;3989:1;3982:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "319400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "553",
								"delegate(address)": "42985",
								"giveRightToVote(address)": "21795",
								"proposals(uint256)": "1000",
								"voters(address)": "1015"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 635,
									"end": 646,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 635,
									"end": 659,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 649,
									"end": 659,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 635,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 672,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 672,
									"end": 691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 672,
									"end": 691,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 672,
									"end": 702,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 702,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 754,
									"end": 942,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 775,
									"end": 788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 775,
									"end": 795,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 771,
									"end": 772,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 795,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 754,
									"end": 942,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 832,
									"end": 929,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 929,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 879,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 880,
									"end": 881,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 882,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 882,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 912,
									"end": 913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 929,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 832,
									"end": 929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 930,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 797,
									"end": 800,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 797,
									"end": 800,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 797,
									"end": 800,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 797,
									"end": 800,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 797,
									"end": 800,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 754,
									"end": 942,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 754,
									"end": 942,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 754,
									"end": 942,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 199,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 189,
									"end": 201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 232,
									"end": 241,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 302,
									"end": 304,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 320,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 356,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 341,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 394,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 390,
									"end": 392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 409,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 425,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 454,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 446,
									"end": 455,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 477,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 464,
									"end": 500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 527,
									"end": 529,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 530,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 559,
									"end": 561,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 618,
									"end": 625,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 609,
									"end": 611,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 605,
									"end": 616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 601,
									"end": 626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 677,
									"end": 683,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 665,
									"end": 675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 662,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 659,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 645,
									"end": 655,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 642,
									"end": 660,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 685,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 636,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 866,
									"end": 899,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 912,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 910,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 935,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 925,
									"end": 935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 960,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 955,
									"end": 956,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 952,
									"end": 961,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1243,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1324,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1337,
									"end": 1352,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1380,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1559,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1560,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1584,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1608,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1772,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1758,
									"end": 1773,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1796,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1789,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 1797,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 2463,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a970841ff188f7bc8345b916fad680800bca564b84d031898cace53869ada5d64736f6c63430008070033",
									".code": [
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 2463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 918,
											"end": 943,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 918,
											"end": 943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 977,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 959,
											"end": 977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 952,
											"end": 986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 952,
											"end": 986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 952,
											"end": 986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 891,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 436,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 436,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 436,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 659,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 436,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 739,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3167,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3008,
											"end": 3027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 471,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2819,
											"end": 3283,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1552,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20726967687420746F20766F74652E000000000000"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1564,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1592,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1649,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520616C726561647920766F7465642E0000000000000000000000000000"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1349,
											"end": 1691,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2772,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2460,
											"end": 2814,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1685,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2070,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2343,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2291,
											"end": 2326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2178,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 2456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 2456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 2456,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "PUSH",
											"source": 1,
											"value": "746F20766F74652E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2075,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1696,
											"end": 2100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1065,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F746564000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 997,
											"end": 1344,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1153,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1296,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 213,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 415,
											"end": 438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 411,
											"end": 443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 456,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3288,
											"end": 3416,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3288,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3361,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3416,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3421,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3421,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3552,
											"end": 3566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3567,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3541,
											"end": 3590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3625,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3630,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3759,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3776,
											"end": 3777,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3808,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 4003,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3819,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3948,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3972,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 3973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3997,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"voters(address)": "a3ec138d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"weight\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"vote\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"custom/ballot.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"custom/ballot.sol\":{\"keccak256\":\"0x2783fc499f00968d19bb308e2f0bd2432e87480ae1094227e085b447d47761b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb890c470bc9b4dabf35180a0d69c9c506ca6a079c7d51f775ef5e415b24fab\",\"dweb:/ipfs/QmcBsU75Gqh2sSsdKbEtoE87sNqzvumDqLt8bDnKEtLAN4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "custom/ballot.sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "custom/ballot.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)10_storage)"
							},
							{
								"astId": 26,
								"contract": "custom/ballot.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)15_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)15_storage)dyn_storage": {
								"base": "t_struct(Proposal)15_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)10_storage"
							},
							"t_struct(Proposal)15_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 12,
										"contract": "custom/ballot.sol:Ballot",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 14,
										"contract": "custom/ballot.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)10_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "custom/ballot.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 5,
										"contract": "custom/ballot.sol:Ballot",
										"label": "voted",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "custom/ballot.sol:Ballot",
										"label": "delegate",
										"offset": 2,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 9,
										"contract": "custom/ballot.sol:Ballot",
										"label": "vote",
										"offset": 22,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"custom/ballot.sol": {
				"ast": {
					"absolutePath": "custom/ballot.sol",
					"exportedSymbols": {
						"Ballot": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "Ballot",
							"nameLocation": "97:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "139:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "133:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "133:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "178:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "173:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "223:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "215:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "215:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "265:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "259:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 8,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "259:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "117:5:0",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "110:190:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "363:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "355:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 11,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "383:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "378:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "378:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "336:8:0",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "329:85:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 17,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "451:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "436:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 22,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "501:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "471:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "479:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "471:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "488:5:0"
											},
											"referencedDeclaration": 10,
											"src": "488:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 26,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "563:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "545:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "545:8:0"
											},
											"referencedDeclaration": 15,
											"src": "545:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$15_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 25,
										"nodeType": "ArrayTypeName",
										"src": "545:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "624:325:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "635:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "649:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "649:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "635:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "635:24:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 37,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "672:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 39,
															"indexExpression": {
																"id": 38,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "679:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "672:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "672:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "701:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "672:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "672:30:0"
											},
											{
												"body": {
													"id": 66,
													"nodeType": "Block",
													"src": "802:140:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 59,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "866:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 61,
																				"indexExpression": {
																					"id": 60,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 45,
																					"src": "880:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "866:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 62,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "912:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 58,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "832:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$15_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "832:97:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$15_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 55,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "817:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "817:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$15_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$15_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "817:113:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "817:113:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 48,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 49,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "775:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "775:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "771:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"initializationExpression": {
													"assignments": [
														45
													],
													"declarations": [
														{
															"constant": false,
															"id": 45,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "764:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 67,
															"src": "759:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 44,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "759:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 47,
													"initialValue": {
														"hexValue": "30",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "759:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "797:3:0",
														"subExpression": {
															"id": 52,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "797:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 54,
													"nodeType": "ExpressionStatement",
													"src": "797:3:0"
												},
												"nodeType": "ForStatement",
												"src": "754:188:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "610:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "593:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "593:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:32:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:0"
									},
									"scope": 193,
									"src": "581:368:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1054:242:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 75,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 77,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1087:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1073:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1065:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1161:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 83,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1162:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 85,
																	"indexExpression": {
																		"id": 84,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1169:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1162:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1162:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f746564",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1182:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b",
																"typeString": "literal_string \"The voter already voted\""
															},
															"value": "The voter already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a5c3098a641a199d2f11c6fb6477ffe28e5db5bb08ce0d5c60c00f5f2bac5b",
																"typeString": "literal_string \"The voter already voted\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1153:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 92,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1227:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 94,
																	"indexExpression": {
																		"id": 93,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "1234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1227:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1227:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1227:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1219:34:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 100,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1264:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 102,
															"indexExpression": {
																"id": 101,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "1271:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1264:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1264:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1264:24:0"
											}
										]
									},
									"functionSelector": "9e7b8d61",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1015:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1039:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1031:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:15:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:0:0"
									},
									"scope": 193,
									"src": "1006:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1365:1091:0",
										"statements": [
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1526:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "1512:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 114,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 113,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1512:5:0"
															},
															"referencedDeclaration": 10,
															"src": "1512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"baseExpression": {
														"id": 116,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1535:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 119,
													"indexExpression": {
														"expression": {
															"id": 117,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1542:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1542:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1535:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 122,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1572:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "1572:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1572:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20726967687420746f20766f74652e",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1591:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															},
															"value": "You have no right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d941e72ce9877368b345718662af8a319caf51d2ec09b2fc3cfdf16c169360e9",
																"typeString": "literal_string \"You have no right to vote.\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1564:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1639:13:0",
															"subExpression": {
																"expression": {
																	"id": 130,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1640:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1640:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1631:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1631:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1693:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 138,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1699:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1699:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1693:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1710:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1685:58:0"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "delegater",
														"nameLocation": "2037:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2023:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 145,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 144,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "2023:5:0"
															},
															"referencedDeclaration": 10,
															"src": "2023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"baseExpression": {
														"id": 147,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2049:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 149,
													"indexExpression": {
														"id": 148,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2056:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2049:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2023:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 152,
																	"name": "delegater",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "2078:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "2078:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2078:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2070:30:0"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 158,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2115:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2115:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2130:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2115:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2115:19:0"
											},
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 164,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2145:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2145:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 167,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2163:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2145:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2145:20:0"
											},
											{
												"condition": {
													"expression": {
														"id": 170,
														"name": "delegater",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2181:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "2181:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 189,
													"nodeType": "Block",
													"src": "2359:88:0",
													"statements": [
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 182,
																		"name": "delegater",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "2402:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2402:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 185,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2422:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2422:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2402:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "2402:33:0"
														}
													]
												},
												"id": 190,
												"nodeType": "IfStatement",
												"src": "2178:269:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "2197:158:0",
													"statements": [
														{
															"expression": {
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 172,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "2291:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$15_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 175,
																		"indexExpression": {
																			"expression": {
																				"id": 173,
																				"name": "delegater",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "2301:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 9,
																			"src": "2301:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2291:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$15_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 14,
																	"src": "2291:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 177,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2330:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "2330:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2291:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "2291:52:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5c19a95c",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "1335:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:12:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:0:0"
									},
									"scope": 193,
									"src": "1326:1130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "88:2375:0",
							"usedErrors": []
						}
					],
					"src": "33:2430:0"
				},
				"id": 0
			}
		}
	}
}